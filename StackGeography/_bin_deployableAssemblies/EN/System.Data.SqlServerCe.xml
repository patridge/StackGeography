<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Data.SqlServerCe</name>
  </assembly>
  <members>
    <member name="T:System.Data.SqlServerCe.AddOption">
      <summary>Determines whether the subscription will be added to an existing database or whether a new database will be created when the subscription is added.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.AddOption.ExistingDatabase">
      <summary>Adds the subscription to the existing database that defined in the connection string.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.AddOption.CreateDatabase">
      <summary>Causes a new SQL Server Compact database to be created when the subscription is created.</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.CommitMode">
      <summary>When passed to the <see cref="M:System.Data.SqlServerCe.SqlCeTransaction.Commit" /> function, the CommitMode specifies when the commit occurs. </summary>
    </member>
    <member name="F:System.Data.SqlServerCe.CommitMode.Deferred">
      <summary>Changes are committed to disk after user-specified flush interval. The default flush interval is 10 seconds but can be modified within the <see cref="P:System.Data.SqlServerCe.SqlCeConnection.ConnectionString" />. </summary>
    </member>
    <member name="F:System.Data.SqlServerCe.CommitMode.Immediate">
      <summary>Changes are committed immediately.</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.DbInsertOptions">
      <summary>Specifies the options to use when using the <see cref="System.Data.SqlServerCe.SqlCeResultSet.Insert" /> method. </summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DbInsertOptions.KeepCurrentPosition">
      <summary>Maintains the current position after inserting a new row.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DbInsertOptions.PositionOnInsertedRow">
      <summary>Positions the cursor on the newly-inserted row.</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.DbRangeOptions">
      <summary>Specifies the options used by the <see cref="M:System.Data.SqlServerCe.SqlCeCommand.SetRange(System.Data.SqlServerCe.DbRangeOptions,System.Object[],System.Object[])" /> method when specifying the index range over which to seek.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DbRangeOptions.InclusiveStart">
      <summary>Includes the startData value in the range.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DbRangeOptions.InclusiveEnd">
      <summary>Includes the endData value in the range.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DbRangeOptions.ExclusiveStart">
      <summary>Excludes the startData value from the range.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DbRangeOptions.ExclusiveEnd">
      <summary>Excludes the endData value from the range.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DbRangeOptions.ExcludeNulls">
      <summary>Excludes null values from the range.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DbRangeOptions.Prefix">
      <summary>Specifies a range in which index values begin with the value of startData. When using the Prefix option, endData must be set to null.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DbRangeOptions.Match">
      <summary>Specifies a range in which index values match the value of startData. When using the Match option, endData must be set to null.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DbRangeOptions.Default">
      <summary>Equivalent to setting both the <see cref="F:System.Data.SqlServerCe.DbRangeOptions.InclusiveStart" /> and <see cref="F:System.Data.SqlServerCe.DbRangeOptions.InclusiveEnd" /> flags.</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.DbSeekOptions">
      <summary>Options that specify how the <see cref="M:System.Data.SqlServerCe.SqlCeDataReader.Seek(System.Data.SqlServerCe.DbSeekOptions,System.Object[])" /> method will seek on an index.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DbSeekOptions.FirstEqual">
      <summary>Advances to the first matching row (in index order) on the index.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DbSeekOptions.LastEqual">
      <summary>Advances to the last matching row (in index order) on the index. </summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DbSeekOptions.AfterEqual">
      <summary>Advances to the last matching row on the index. If there are no matching rows, advances to the first row with values after the seek value, in index order.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DbSeekOptions.After">
      <summary>Advances to the first row with values (in index order) after the seek value.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DbSeekOptions.BeforeEqual">
      <summary>Advances to the first matching row on the index. If there are no matching rows, advances to the last row with values before the seek value, in index order.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DbSeekOptions.Before">
      <summary>Advances to the last row with values (in index order) before the seek value.</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.DropOption">
      <summary>Specifies whether to leave or delete the database when dropping a subscription using the <see cref="M:System.Data.SqlServerCe.SqlCeReplication.DropSubscription(System.Data.SqlServerCe.DropOption)" /> method.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DropOption.LeaveDatabase">
      <summary>Deletes the replication system tables and all replication system columns in the user tables when you drop a subscription using the <see cref="M:System.Data.SqlServerCe.SqlCeReplication.DropSubscription(System.Data.SqlServerCe.DropOption)" /> method, but does not delete the SQL Server Compact database.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DropOption.DropDatabase">
      <summary>Deletes the SQL Server Compact database when you drop a subscription using the <see cref="M:System.Data.SqlServerCe.SqlCeReplication.DropSubscription(System.Data.SqlServerCe.DropOption)" /> method.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DropOption.UnregisterSubscription">
      <summary>Unregisters the SQL Server Compact database from a subscription. </summary>
    </member>
    <member name="T:System.Data.SqlServerCe.ExchangeType">
      <summary>Specifies whether data is merged up to the Publisher only, or merge in both directions between the Publisher and the Subscriber.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.ExchangeType.None">
      <summary>No <see cref="ExchangeType" /> options are specified.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.ExchangeType.Upload">
      <summary>Merges only the Subscriber changes with the Publisher.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.ExchangeType.BiDirectional">
      <summary>Merges all changes between the Publisher and Subscriber. This is the default setting.</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.NetworkType">
      <summary>Specifies the network protocol to use when setting the <see cref="P:System.Data.SqlServerCe.SqlCeReplication.DistributorNetwork" /> or <see cref="P:System.Data.SqlServerCe.SqlCeReplication.PublisherNetwork" /> properties of the <see cref="T:System.Data.SqlServerCe.SqlCeReplication" /> object.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.NetworkType.DefaultNetwork">
      <summary>Use the currently-configured Net-Library when setting the <see cref="P:System.Data.SqlServerCe.SqlCeReplication.DistributorNetwork" /> or <see cref="P:System.Data.SqlServerCe.SqlCeReplication.PublisherNetwork" /> properties of the <see cref="T:System.Data.SqlServerCe.SqlCeReplication" /> object.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.NetworkType.TcpIpSockets">
      <summary>Use the TCP/IP Sockets Net-Library when setting the <see cref="P:System.Data.SqlServerCe.SqlCeReplication.DistributorNetwork" /> or <see cref="P:System.Data.SqlServerCe.SqlCeReplication.PublisherNetwork" /> properties of the <see cref="T:System.Data.SqlServerCe.SqlCeReplication" /> object.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.NetworkType.MultiProtocol">
      <summary>Use the Multiprotocol Net-Library when setting the <see cref="P:System.Data.SqlServerCe.SqlCeReplication.DistributorNetwork" /> or <see cref="P:System.Data.SqlServerCe.SqlCeReplication.PublisherNetwork" /> properties of the <see cref="T:System.Data.SqlServerCe.SqlCeReplication" /> object.</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.OnStartTableDownload">
      <summary>A user-defined delegate to the event that fires at the start of downloading table changes from the server.</summary>
      <param name="ar">The <see cref="T:System.IAsyncResult" /> interface returned by the <see cref="M:System.Data.SqlServerCe.SqlCeReplication.BeginSynchronize(System.AsyncCallback,System.Data.SqlServerCe.OnStartTableUpload,System.Data.SqlServerCe.OnStartTableDownload,System.Data.SqlServerCe.OnSynchronization,System.Object)" /> method.</param>
      <param name="tableName">The name of the table being downloaded from the server.</param>
    </member>
    <member name="T:System.Data.SqlServerCe.OnStartTableUpload">
      <summary>A user-defined delegate to the event that fires at the start of uploading table changes to the server.</summary>
      <param name="ar">The <see cref="T:System.IAsyncResult" /> interface returned by the BeginSynchronize method.</param>
      <param name="tableName">The name of the table being uploaded to the server.</param>
    </member>
    <member name="T:System.Data.SqlServerCe.OnSynchronization">
      <summary>A user-defined delegate that consumes the ongoing synchronization events reported during the reconciler work.</summary>
      <param name="ar">The <see cref="T:System.IAsyncResult" /> interface returned by the BeginSynchronize method.</param>
      <param name="percentComplete">The value returned by the reconciler that represents the percent of replication work completed by the reconciler.</param>
    </member>
    <member name="T:System.Data.SqlServerCe.PurgeType">
      <summary>Specifies the criteria to use to purge metadata when using the <see cref="M:System.Data.SqlServerCe.SqlCeChangeTracking.PurgeTombstoneTableData(System.String,System.Data.SqlServerCe.PurgeType,System.Int64)" /> method or the <see cref="M:System.Data.SqlServerCe.SqlCeChangeTracking.PurgeTransactionSequenceData(System.Data.SqlServerCe.PurgeType,System.Int64)" /> method of the <see cref="T:System.Data.SqlServerCe.SqlCeChangeTracking" /> class.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.PurgeType.None">
      <summary>This value is reserved for use by the tracking infrastructure. Do not use it in your code.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.PurgeType.TimeBased">
      <summary>Specifies that metadata will be deleted based on whether it is older than a specified number of days.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.PurgeType.CsnBased">
      <summary>Specifies that metadata will be deleted based on the Commit Sequence Number (CSN) of the last transaction to modify it.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.PurgeType.Max">
      <summary>This value is reserved for use by the tracking infrastructure. Do not use it in your code.</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.RdaBatchOption">
      <summary>Specifies whether or not the rows associated with the <see cref="M:System.Data.SqlServerCe.SqlCeRemoteDataAccess.Push(System.String,System.String)" /> should be batched together in a single transaction.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.RdaBatchOption.BatchingOff">
      <summary>Indicates that SQL Server Compact does not batch rows pushed to SQL Server. The server processes each row separately. This is the default setting. </summary>
    </member>
    <member name="F:System.Data.SqlServerCe.RdaBatchOption.BatchingOn">
      <summary>Indicates that SQL Server Compact batches the rows pushed to SQL Server into a single transaction.</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.RdaTrackOption">
      <summary>Specifies whether or not the table being pulled to the device is tracked.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.RdaTrackOption.TrackingOff">
      <summary>Indicates that SQL Server Compact does not track changes to the pulled table. No PRIMARY KEY constraints are created locally.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.RdaTrackOption.TrackingOn">
      <summary>Indicates that SQL Server Compact tracks all changes to the pulled table. PRIMARY KEY constraints related to the value specified for <paramref name="sqlSelectString" /> are created on the local table. This is the default setting. </summary>
    </member>
    <member name="F:System.Data.SqlServerCe.RdaTrackOption.TrackingOnWithIndexes">
      <summary>Indicates that SQL Server Compact tracks all changes to the pulled table. Indexes and PRIMARY KEY constraints that existed on the SQL Server table specified in <paramref name="sqlSelectString" /> are created on the local table.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.RdaTrackOption.TrackingOffWithIndexes">
      <summary>Indicates that SQL Server Compact does not track changes to the pulled table. Indexes and PRIMARY KEY constraints that existed on the SQL Server table specified in <paramref name="sqlSelectString" /> are created on the local table.</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.RepairOption">
      <summary>When passed to the <see cref="M:System.Data.SqlServerCe.SqlCeEngine.Repair(System.String,System.Data.SqlServerCe.RepairOption)" /> method, <see cref="T:System.Data.SqlServerCe.RepairOption" /> specifies the type of database repair to perform.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.RepairOption.DeleteCorruptedRows">
      <summary>Deletes all corrupted rows without attempting to fix them.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.RepairOption.RecoverCorruptedRows">
      <summary>Attempts to fix all corrupted rows rather than deleting them.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.RepairOption.RecoverAllPossibleRows">
      <summary>Fixes all of the corrupted rows that it is possible to fix. Rows that cannot be fixed are left unmodified.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.RepairOption.RecoverAllOrFail">
      <summary>Attempts to fix all corrupted rows. If not all of the rows can be fixed, none of them are modified and the operation fails.</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.ResultSetEnumerator">
      <summary>An enumerator that can be used to iterate through a collection of records in a ResultSet object. The <see cref="T:System.Data.SqlServerCe.ResultSetEnumerator" /> is not designed to be used directly from within your code. You will get more functionality by working directly with the <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" /> object.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.ResultSetEnumerator.#ctor(System.Data.SqlServerCe.SqlCeResultSet)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.SqlServerCe.ResultSetEnumerator" /> class. </summary>
      <param name="resultSet">A <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" /> object containing the records to be enumerated.</param>
    </member>
    <member name="P:System.Data.SqlServerCe.ResultSetEnumerator.Current">
      <summary>The current record in the <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" />.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.ResultSetEnumerator.MoveNext">
      <summary>Moves to the next record in the <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" />.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.ResultSetEnumerator.Reset">
      <summary>Positions the cursor before the first record in the <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" />.</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.ResultSetEnumerator.System#Collections#IEnumerator#Current"></member>
    <member name="T:System.Data.SqlServerCe.ResultSetOptions">
      <summary>Sets options for the <see cref="M:System.Data.SqlServerCe.ResultSetEnumerator.#ctor(System.Data.SqlServerCe.SqlCeResultSet)" />.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.ResultSetOptions.None">
      <summary>No ResultSet options are specified.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.ResultSetOptions.Updatable">
      <summary>The ResultSet allows updates.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.ResultSetOptions.Scrollable">
      <summary>The ResultSet can be scrolled both forward and backward.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.ResultSetOptions.Sensitive">
      <summary>The ResultSet detects changes made to the data source.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.ResultSetOptions.Insensitive">
      <summary>The ResultSet does not detect changes made to the data source. </summary>
    </member>
    <member name="T:System.Data.SqlServerCe.ResultSetSensitivity">
      <summary>Sets the sensitivity of the <see cref="M:System.Data.SqlServerCe.ResultSetEnumerator.#ctor(System.Data.SqlServerCe.SqlCeResultSet)" />.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.ResultSetSensitivity.Asensitive">
      <summary>No sensitivity is set for the ResultSet.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.ResultSetSensitivity.Insensitive">
      <summary>The ResultSet does not detect changes made to the data source.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.ResultSetSensitivity.Sensitive">
      <summary>The ResultSet detects changes made to the data source.</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.ResultSetView">
      <summary>Implements data binding interfaces and provides a bridge between user interface controls and the <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" />.</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.ResultSetView.Columns">
      <summary>Gets or sets the columns by name in a <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" /> which will be bound to a given control.</summary>
    </member>
    <member name="E:System.Data.SqlServerCe.ResultSetView.ListChanged">
      <summary>This event is raised when items are added or removed from the <see cref="T:System.Data.SqlServerCe.ResultSetView" />.</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.ResultSetView.Ordinals">
      <summary>Gets or sets the columns by ordinal position in a <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" /> which will be bound to a given control.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.ResultSetView.System#Collections#ICollection#CopyTo(System.Array,System.Int32)"></member>
    <member name="P:System.Data.SqlServerCe.ResultSetView.System#Collections#ICollection#Count"></member>
    <member name="P:System.Data.SqlServerCe.ResultSetView.System#Collections#ICollection#IsSynchronized"></member>
    <member name="P:System.Data.SqlServerCe.ResultSetView.System#Collections#ICollection#SyncRoot"></member>
    <member name="M:System.Data.SqlServerCe.ResultSetView.System#Collections#IEnumerable#GetEnumerator"></member>
    <member name="M:System.Data.SqlServerCe.ResultSetView.System#Collections#IList#Add(System.Object)"></member>
    <member name="M:System.Data.SqlServerCe.ResultSetView.System#Collections#IList#Clear"></member>
    <member name="M:System.Data.SqlServerCe.ResultSetView.System#Collections#IList#Contains(System.Object)"></member>
    <member name="M:System.Data.SqlServerCe.ResultSetView.System#Collections#IList#IndexOf(System.Object)"></member>
    <member name="M:System.Data.SqlServerCe.ResultSetView.System#Collections#IList#Insert(System.Int32,System.Object)"></member>
    <member name="P:System.Data.SqlServerCe.ResultSetView.System#Collections#IList#IsFixedSize"></member>
    <member name="P:System.Data.SqlServerCe.ResultSetView.System#Collections#IList#IsReadOnly"></member>
    <member name="P:System.Data.SqlServerCe.ResultSetView.System#Collections#IList#Item(System.Int32)"></member>
    <member name="M:System.Data.SqlServerCe.ResultSetView.System#Collections#IList#Remove(System.Object)"></member>
    <member name="M:System.Data.SqlServerCe.ResultSetView.System#Collections#IList#RemoveAt(System.Int32)"></member>
    <member name="M:System.Data.SqlServerCe.ResultSetView.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)"></member>
    <member name="M:System.Data.SqlServerCe.ResultSetView.System#ComponentModel#IBindingList#AddNew"></member>
    <member name="P:System.Data.SqlServerCe.ResultSetView.System#ComponentModel#IBindingList#AllowEdit"></member>
    <member name="P:System.Data.SqlServerCe.ResultSetView.System#ComponentModel#IBindingList#AllowNew"></member>
    <member name="P:System.Data.SqlServerCe.ResultSetView.System#ComponentModel#IBindingList#AllowRemove"></member>
    <member name="M:System.Data.SqlServerCe.ResultSetView.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)"></member>
    <member name="M:System.Data.SqlServerCe.ResultSetView.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)"></member>
    <member name="P:System.Data.SqlServerCe.ResultSetView.System#ComponentModel#IBindingList#IsSorted"></member>
    <member name="M:System.Data.SqlServerCe.ResultSetView.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)"></member>
    <member name="M:System.Data.SqlServerCe.ResultSetView.System#ComponentModel#IBindingList#RemoveSort"></member>
    <member name="P:System.Data.SqlServerCe.ResultSetView.System#ComponentModel#IBindingList#SortDirection"></member>
    <member name="P:System.Data.SqlServerCe.ResultSetView.System#ComponentModel#IBindingList#SortProperty"></member>
    <member name="P:System.Data.SqlServerCe.ResultSetView.System#ComponentModel#IBindingList#SupportsChangeNotification"></member>
    <member name="P:System.Data.SqlServerCe.ResultSetView.System#ComponentModel#IBindingList#SupportsSearching"></member>
    <member name="P:System.Data.SqlServerCe.ResultSetView.System#ComponentModel#IBindingList#SupportsSorting"></member>
    <member name="M:System.Data.SqlServerCe.ResultSetView.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])"></member>
    <member name="M:System.Data.SqlServerCe.ResultSetView.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])"></member>
    <member name="M:System.Data.SqlServerCe.ResultSetView.System#IDisposable#Dispose"></member>
    <member name="T:System.Data.SqlServerCe.RowView"></member>
    <member name="M:System.Data.SqlServerCe.RowView.Dispose"></member>
    <member name="M:System.Data.SqlServerCe.RowView.Equals(System.Object)"></member>
    <member name="M:System.Data.SqlServerCe.RowView.GetHashCode"></member>
    <member name="P:System.Data.SqlServerCe.RowView.System#ComponentModel#IDataErrorInfo#Error"></member>
    <member name="P:System.Data.SqlServerCe.RowView.System#ComponentModel#IDataErrorInfo#Item(System.String)"></member>
    <member name="M:System.Data.SqlServerCe.RowView.System#ComponentModel#IEditableObject#BeginEdit"></member>
    <member name="M:System.Data.SqlServerCe.RowView.System#ComponentModel#IEditableObject#CancelEdit"></member>
    <member name="M:System.Data.SqlServerCe.RowView.System#ComponentModel#IEditableObject#EndEdit"></member>
    <member name="P:System.Data.SqlServerCe.RowView.UpdatableRecord"></member>
    <member name="T:System.Data.SqlServerCe.SecurityType">
      <summary>Specifies the mode of security to use when connecting to the Publisher or Distributor during Replication. </summary>
    </member>
    <member name="F:System.Data.SqlServerCe.SecurityType.DBAuthentication">
      <summary>Use SQL Server Authentication when connecting to the Publisher or Distributor during Replication. This is the default.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.SecurityType.NTAuthentication">
      <summary>Use Integrated Windows Authentication when connecting to the Publisher or Distributor during Replication.</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.SnapshotTransferType">
      <summary>Controls how snapshot files are transferred from the Distributor to the computer running IIS.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.SnapshotTransferType.UNC">
      <summary>The snapshot file will be transferred from the Universal Naming Convention (UNC) share on the server. This is the default.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.SnapshotTransferType.FTP">
      <summary>The snapshot file will be transferred via the FTP protocol.</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeChangeTracking">
      <summary>[SECURITY CRITICAL] Provides methods that can be used to track changes to tables in a SQL Server Compact database.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeChangeTracking.#ctor(System.Data.SqlServerCe.SqlCeConnection)">
      <summary>[SECURITY CRITICAL] Initializes a new instance of the <see cref="T:System.Data.SqlServerCe.SqlCeChangeTracking" /> class with a <see cref="T:System.Data.SqlServerCe.SqlCeConnection" />. </summary>
      <param name="connection">A <see cref="T:System.Data.SqlServerCe.SqlCeConnection" /> that represents the connection to a data source.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeChangeTracking.#ctor(System.Data.SqlServerCe.SqlCeTransaction)">
      <summary>[SECURITY CRITICAL] Initializes a new instance of the <see cref="T:System.Data.SqlServerCe.SqlCeChangeTracking" /> class with a <see cref="T:System.Data.SqlServerCe.SqlCeTransaction" />. </summary>
      <param name="transaction">A <see cref="T:System.Data.SqlServerCe.SqlCeTransaction" /> that represents the transaction in which change tracking executes.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeChangeTracking.DisableTracking(System.String)">
      <summary>[SECURITY CRITICAL] Disables tracking on the specified table.</summary>
      <param name="tableName">The name of the table on which to disable change tracking.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeChangeTracking.Dispose">
      <summary>[SECURITY CRITICAL] Releases all resources used by the current instance of the <see cref="T:System.Data.SqlServerCe.SqlCeChangeTracking" /> class. </summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeChangeTracking.Dispose(System.Boolean)">
      <summary>[SECURITY CRITICAL] Releases the unmanaged resources used by the <see cref="T:System.Data.SqlServerCe.SqlCeChangeTracking" /> class and optionally releases the managed resources. </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeChangeTracking.EnableTracking(System.String,System.Data.SqlServerCe.TrackingKeyType,System.Data.SqlServerCe.TrackingOptions)">
      <summary>[SECURITY CRITICAL] Enables tracking on the specified table.</summary>
      <param name="tableName">The name of the table on which to enable tracking.</param>
      <param name="trackingKeyType">One of the values of <see cref="T:System.Data.SqlServerCe.TrackingKeyType" /> that specifies the row key to use for tracked data.  The row key uniquely identifies table rows to the tracking system and can be either the primary key of the table or a column of type uniqueidentifier that has the ROWGUIDCOL attribute applied.</param>
      <param name="trackingOptions">A bitwise combination <see cref="T:System.Data.SqlServerCe.TrackingOptions" /> values that specifies the database operations to be tracked on the table.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeChangeTracking.GetLastCommittedCsn">
      <summary>[SECURITY CRITICAL] Returns the Commit Sequence Number (CSN) of the last transaction committed for the data source associated with the <see cref="T:System.Data.SqlServerCe.SqlCeChangeTracking" /> object. </summary>
      <returns>The CSN for the data source.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeChangeTracking.GetTrackingOptions(System.String,System.Data.SqlServerCe.TrackingOptions@)">
      <summary>[SECURITY CRITICAL] Gets a value that indicates the database operations that are currently being tracked on the specified table.</summary>
      <returns>true if the table is currently being tracked (tracking is enabled); otherwise, false.</returns>
      <param name="tableName">The name of the table for which to retrieve the operations that are currently being tracked.</param>
      <param name="trackingOptions">When this method returns, contains a bitwise combination of <see cref="T:System.Data.SqlServerCe.TrackingOptions" /> values, which indicates the operations that are currently being tracked. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeChangeTracking.PackTombstoneKey(System.String,System.Object[])">
      <summary>[SECURITY CRITICAL] Converts the row key from the specified table into the format used for the row key in the tombstone table.</summary>
      <returns>An array of bytes that represents the value of the row key in the tombstone table.</returns>
      <param name="tableName">The name of the table containing the row.</param>
      <param name="columnValues">An array that contains the column values of the row key.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeChangeTracking.PurgeTombstoneTableData(System.String,System.Data.SqlServerCe.PurgeType,System.Int64)">
      <summary>[SECURITY CRITICAL] Purges tombstone data for the specified table.</summary>
      <param name="tableName">The name of the table for which to delete the tombstone data.</param>
      <param name="pType">One of the values of <see cref="T:System.Data.SqlServerCe.PurgeType" /> that specifies whether the purge is time based or based on the commit sequence number (CSN) of the last transaction to modify the tombstone data.</param>
      <param name="retentionValue">A number that specifies the limit up to which tombstone rows should be retained. In the case of a time based purge the parameter specifies the number of days from the present date for which to retain tombstone data. In the case of a CSN based purge, the parameter specifies the CSN of the last transaction for which tombstone data should be retained.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeChangeTracking.PurgeTransactionSequenceData(System.Data.SqlServerCe.PurgeType,System.Int64)">
      <summary>[SECURITY CRITICAL] Purges the specified data from the transaction history table.</summary>
      <param name="pType">One of the values of <see cref="T:System.Data.SqlServerCe.PurgeType" /> that specifies whether the purge is time based or based on the commit sequence number (CSN) of the last transaction to modify the transaction history data.</param>
      <param name="retentionValue">A number that specifies the limit up to which rows should be retained. In the case of a time based purge the parameter specifies the number of days from the present date for which to retain transaction history data. In the case of a CSN based purge, the parameter specifies the CSN of the last transaction for which transaction history data should be retained.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeChangeTracking.UnpackTombstoneKey(System.String,System.Byte[])">
      <summary>[SECURITY CRITICAL] Converts the representation of a row key used in the tombstone table into the column values of the row key used in the specified table.</summary>
      <returns>An array of objects that contains the column values of the row key used in the table.</returns>
      <param name="tableName">The name of the table.</param>
      <param name="tombstoneKey">An array of bytes that represents the value of the row key in the tombstone table.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeChangeTracking.UpgradePublicTracking(System.String)">
      <summary>[SECURITY CRITICAL] Upgrades tracking metadata in a SQL Server Compact SP2 database, on which tracking has been enabled, for use by Microsoft Sync Framework Service Pack 1 (SP1) and later versions of Sync Framework.</summary>
      <returns>true if the database was successfully upgraded or if the database is not currently being tracked; otherwise, false. </returns>
      <param name="connectionString">A connection string to the data source.</param>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeCommand">
      <summary>Represents an SQL statement to execute against a data source.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommand.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> class.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommand.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> class with the text of the query.</summary>
      <param name="commandText">The text of the query. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommand.#ctor(System.String,System.Data.SqlServerCe.SqlCeConnection)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> class with the text of the query and a <see cref="T:System.Data.SqlServerCe.SqlCeConnection" />.</summary>
      <param name="commandText">The text of the query. </param>
      <param name="connection">A <see cref="T:System.Data.SqlServerCe.SqlCeConnection" /> that represents the connection to a data source. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommand.#ctor(System.String,System.Data.SqlServerCe.SqlCeConnection,System.Data.SqlServerCe.SqlCeTransaction)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> class with the text of the query, a <see cref="T:System.Data.SqlServerCe.SqlCeConnection" />, and the <see cref="T:System.Data.SqlServerCe.SqlCeTransaction" />.</summary>
      <param name="commandText">The text of the query. </param>
      <param name="connection">A <see cref="T:System.Data.SqlServerCe.SqlCeConnection" /> that represents the connection to a data source. </param>
      <param name="transaction">The transaction in which the <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> executes. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommand.Cancel">
      <summary>Attempts to cancel the execution of a <see cref="T:System.Data.SqlServerCe.SqlCeCommand" />.</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeCommand.CommandText">
      <summary>Gets or sets an SQL statement to execute at the data source.</summary>
      <returns>The SQL statement to execute or the name of the base table to open. The default value is an empty string.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeCommand.CommandTimeout">
      <summary>Gets or sets the wait time before terminating the attempt to execute a command and generating an error.</summary>
      <returns>Always zero (0) for SQL Server Compact.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeCommand.CommandType">
      <summary>Gets or sets a value indicating how the <see cref="P:System.Data.SqlServerCe.SqlCeCommand.CommandText" /> property is interpreted.</summary>
      <returns>One of the <see cref="T:System.Data.CommandType" /> values. The default is <see cref="F:System.Data.CommandType.Text" />.</returns>
      <exception cref="T:System.ArgumentException">The value was not a valid <see cref="T:System.Data.CommandType" />. </exception>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeCommand.Connection">
      <summary>Gets or sets the <see cref="T:System.Data.SqlServerCe.SqlCeConnection" /> used by this instance of the <see cref="T:System.Data.SqlServerCe.SqlCeCommand" />.</summary>
      <returns>The connection to a data source. The default value is null.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Data.SqlServerCe.SqlCeCommand.Connection" /> property was changed while a transaction was in progress. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommand.CreateParameter">
      <summary>Creates a new instance of a <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> object.</summary>
      <returns>A <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> object.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeCommand.DesignTimeVisible">
      <summary>Get always returns false; set always throws a <see cref="T:System.NotSupportedException" />.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommand.ExecuteNonQuery">
      <summary>Executes an SQL statement against the <see cref="T:System.Data.SqlServerCe.SqlCeConnection" /> and returns the number of rows affected.</summary>
      <returns>The number of rows affected.</returns>
      <exception cref="T:System.InvalidOperationException">The connection does not exist.-or- The connection is not open.-or- Cannot execute a command within a transaction context that differs from the context in which the connection was originally enlisted. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommand.ExecuteReader">
      <summary>Sends the <see cref="P:System.Data.SqlServerCe.SqlCeCommand.CommandText" /> to the <see cref="P:System.Data.SqlServerCe.SqlCeCommand.Connection" /> and builds a <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" />.</summary>
      <returns>A <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> object.</returns>
      <exception cref="T:System.InvalidOperationException">Cannot execute a command within a transaction context that differs from the context in which the connection was originally enlisted. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommand.ExecuteReader(System.Data.CommandBehavior)">
      <summary>Sends the <see cref="P:System.Data.SqlServerCe.SqlCeCommand.CommandText" /> to the <see cref="P:System.Data.SqlServerCe.SqlCeCommand.Connection" /> and builds a <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> by using one of the <see cref="T:System.Data.CommandBehavior" /> values.</summary>
      <returns>A <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> object.</returns>
      <param name="behavior">One of the <see cref="T:System.Data.CommandBehavior" /> values. </param>
      <exception cref="T:System.InvalidOperationException">Cannot execute a command within a transaction context that differs from the context in which the connection was originally enlisted. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommand.ExecuteResultSet(System.Data.SqlServerCe.ResultSetOptions)">
      <summary>Sends the <see cref="P:System.Data.SqlServerCe.SqlCeCommand.CommandText" /> to the <see cref="P:System.Data.SqlServerCe.SqlCeCommand.Connection" /> and builds a <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" /> by using the <see cref="T:System.Data.SqlServerCe.ResultSetOptions" />.</summary>
      <param name="options">The ResultSetOptions to use when building the ResultSet.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommand.ExecuteResultSet(System.Data.SqlServerCe.ResultSetOptions,System.Data.SqlServerCe.SqlCeResultSet)">
      <summary>Sends the <see cref="P:System.Data.SqlServerCe.SqlCeCommand.CommandText" /> to the <see cref="P:System.Data.SqlServerCe.SqlCeCommand.Connection" /> and builds a <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" /> by using the <see cref="T:System.Data.SqlServerCe.ResultSetOptions" />.</summary>
      <param name="options">The ResultSetOptions to use when building the ResultSet.</param>
      <param name="resultSet">The ResultSet to build.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommand.ExecuteScalar">
      <summary>Executes the query and returns the first column of the first row in the result set that is returned by the query. Extra columns or rows are ignored.</summary>
      <returns>The first column of the first row in the result set.</returns>
      <exception cref="T:System.InvalidOperationException">Cannot execute a command within a transaction context that differs from the context in which the connection was originally enlisted. </exception>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeCommand.IndexName">
      <summary>Specifies the index to be opened.</summary>
      <returns>The name of the index to be opened.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeCommand.Parameters">
      <summary>Gets the <see cref="T:System.Data.SqlServerCe.SqlCeParameterCollection" />.</summary>
      <returns>The parameters of the SQL statement. The default is an empty collection.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommand.Prepare">
      <summary>Creates a prepared (or compiled) version of the command on the data source.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Data.SqlServerCe.SqlCeCommand.Connection" /> is not set.-or -The <see cref="P:System.Data.SqlServerCe.SqlCeCommand.Connection" /> is not <see cref="M:System.Data.SqlServerCe.SqlCeConnection.Open" />. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommand.SetRange(System.Data.SqlServerCe.DbRangeOptions,System.Object[],System.Object[])">
      <summary>Restricts the set of rows that will be read by the <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" />.</summary>
      <param name="dbRangeOptions">The options used when specifying the range. </param>
      <param name="startData">The starting key values for the range. </param>
      <param name="endData">The ending key values for the range. </param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Data.SqlServerCe.SqlCeCommand.IndexName" /> property has not been set. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommand.System#ICloneable#Clone"></member>
    <member name="P:System.Data.SqlServerCe.SqlCeCommand.Transaction">
      <summary>Gets or sets the transaction in which the <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> executes.</summary>
      <returns>The <see cref="T:System.Data.SqlServerCe.SqlCeTransaction" />. The default value is null.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeCommand.UpdatedRowSource">
      <summary>Gets or sets how command results are applied to the <see cref="T:System.Data.DataRow" /> when used by the <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> method of the <see cref="T:System.Data.Common.DbDataAdapter" />. This property should not be used with the .NET Compact Framework Data Provider for SQL Server Compact.</summary>
      <returns>One of the <see cref="T:System.Data.UpdateRowSource" /> values. The default is Both. If the command is automatically generated, the default is None.</returns>
      <exception cref="T:System.ArgumentException">The value entered was not one of the <see cref="T:System.Data.UpdateRowSource" /> values. </exception>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeCommandBuilder">
      <summary>Provides a means of automatically generating single-table commands used to reconcile changes made to a <see cref="T:System.Data.DataSet" /> with the associated database. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommandBuilder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.SqlServerCe.SqlCeCommandBuilder" /> class.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommandBuilder.#ctor(System.Data.SqlServerCe.SqlCeDataAdapter)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.SqlServerCe.SqlCeCommandBuilder" /> class with associated <see cref="T:System.Data.SqlServerCe.SqlCeDataAdapter" /> and <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> objects.</summary>
      <param name="adapter">The name of the <see cref="T:System.Data.SqlServerCe.SqlCeDataAdapter" />. </param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeCommandBuilder.CatalogLocation">
      <summary>Not supported in SQL Server Compact.</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeCommandBuilder.CatalogSeparator">
      <summary>Not supported in SQL Server Compact.</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeCommandBuilder.ConflictOption">
      <summary>Specifies which <see cref="T:System.Data.ConflictOption" /> is to be used by the <see cref="T:System.Data.SqlServerCe.SqlCeCommandBuilder" />. </summary>
      <returns>A <see cref="T:System.Data.ConflictOption" /> object.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeCommandBuilder.DataAdapter">
      <summary>Gets or sets a <see cref="T:System.Data.SqlServerCe.SqlCeDataAdapter" /> object for which SQL statements are automatically generated.</summary>
      <returns>A <see cref="T:System.Data.SqlServerCe.SqlCeDataAdapter" /> object.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommandBuilder.GetDeleteCommand">
      <summary>Gets the automatically generated <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> object required to perform deletions on the database when an application calls <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> on the <see cref="T:System.Data.SqlServerCe.SqlCeDataAdapter" />.</summary>
      <returns>The automatically generated <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> object required to perform deletions.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommandBuilder.GetInsertCommand">
      <summary>Gets the automatically generated <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> object required to perform inserts on the database when an application calls <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> on the <see cref="T:System.Data.SqlServerCe.SqlCeDataAdapter" />.</summary>
      <returns>The automatically generated <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> object required to perform inserts.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommandBuilder.GetUpdateCommand">
      <summary>Gets the automatically generated <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> object required to perform updates on the database when an application calls <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> on the <see cref="T:System.Data.SqlServerCe.SqlCeDataAdapter" />.</summary>
      <returns>The automatically generated <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> object required to perform updates.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommandBuilder.QuoteIdentifier(System.String)">
      <summary>Returns the correct quoted form of the specified identifier.</summary>
      <returns>The quoted form of the identifier.</returns>
      <param name="unquotedIdentifier">The identifier for which to return the quoted form.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="unquotedIdentifier" /> is null.</exception>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeCommandBuilder.QuotePrefix">
      <summary>Gets or sets the beginning character or characters to use when specifying SQL Server database objects (for example, tables or columns) whose names contain characters such as spaces or reserved tokens.</summary>
      <returns>The beginning character or characters to use. The default is an empty string.</returns>
      <exception cref="T:System.InvalidOperationException">This property cannot be changed after an INSERT, UPDATE, or DELETE command has been generated. </exception>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeCommandBuilder.QuoteSuffix">
      <summary>Gets or sets the ending character or characters to use when specifying SQL Server database objects (for example, tables or columns) whose names contain characters, such as spaces or reserved tokens.</summary>
      <returns>The ending character or characters to use. The default is an empty string.</returns>
      <exception cref="T:System.InvalidOperationException">This property cannot be changed after an INSERT, UPDATE, or DELETE command has been generated. </exception>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeCommandBuilder.SchemaSeparator">
      <summary>Not supported in SQL Server Compact.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommandBuilder.UnquoteIdentifier(System.String)">
      <summary>Returns the correct unquoted form of the specified identifier.</summary>
      <returns>The identifier with all quotes removed.</returns>
      <param name="quotedIdentifier">The identifier for which to return the unquoted form.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="quotedIdentifier" /> is null.</exception>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeConnection">
      <summary>Represents an open connection to a SQL Server Compact data source.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.SqlServerCe.SqlCeConnection" /> class.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnection.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.SqlServerCe.SqlCeConnection" /> class with the specified connection string.</summary>
      <param name="connectionString">The connection used to open the database. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnection.BeginTransaction">
      <summary>Begins a database transaction.</summary>
      <returns>An object representing the new transaction.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary>Begins a database transaction with the current <see cref="T:System.Data.IsolationLevel" /> value.</summary>
      <returns>An object representing the new transaction.</returns>
      <param name="isolationLevel">The transaction isolation level for this connection. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnection.ChangeDatabase(System.String)">
      <summary>Changes the current database for an open <see cref="T:System.Data.SqlServerCe.SqlCeConnection" />.</summary>
      <param name="value">The database name. </param>
      <exception cref="T:System.ArgumentException">The database name is not valid. </exception>
      <exception cref="T:System.InvalidOperationException">The connection is not open. </exception>
      <exception cref="T:System.Data.SqlServerCe.SqlCeException">The databases cannot be changed. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnection.Close">
      <summary>Closes the connection to the data source. This is the preferred method of closing any open connection.</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnection.ConnectionString">
      <summary>Gets or sets the string used to open a database.</summary>
      <returns>The .NET Compact Framework Data Provider for SQL Server Compact connection string that includes the data source name and other parameters needed to establish the initial connection. The default value is an empty string.</returns>
      <exception cref="T:System.ArgumentException">An invalid connection string argument has been supplied. </exception>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnection.ConnectionTimeout">
      <summary>Gets the time to wait while trying to establish a connection before terminating the attempt and generating an error.</summary>
      <returns>The time (in seconds) to wait for a connection to open. The value is always 0 in SQL Server Compact.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnection.CreateCommand">
      <summary>Creates and returns a <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> object associated with the <see cref="T:System.Data.SqlServerCe.SqlCeConnection" />.</summary>
      <returns>A <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> object.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnection.Database">
      <summary>Gets the name of the current database or the database to be used when a connection is open.</summary>
      <returns>The name of the current database or the name of the database to be used when a connection is open. The default value is an empty string. For SQL Server Compact, the value for this property should be the full path of the database file; for example, "\myApp\myDB.sdf".</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnection.DatabaseIdentifier">
      <summary>Gets the unique identifier of the current database while synchronizing.</summary>
      <returns>The unique identifier of the current database. </returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnection.DataSource">
      <summary>Gets the file name of the data source. </summary>
      <returns>The location and file name of the data source. The default value is an empty string.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnection.Dispose">
      <summary>Releases all resources used by the current instance of the <see cref="T:System.Data.SqlServerCe.SqlCeConnection" /> class. </summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnection.EnlistTransaction(System.Transactions.Transaction)">
      <summary>Enlists in the specified <see cref="T:System.Transactions.Transaction" />.</summary>
      <param name="SysTrans">The transaction in which you want to enlist</param>
      <exception cref="T:System.InvalidOperationException">The connection is already enlisted in a local transaction.-or-The connection could not be enlisted in the transaction.</exception>
      <exception cref="T:System.NullReferenceException">
        <paramref name="SysTrans" /> is null.</exception>
    </member>
    <member name="E:System.Data.SqlServerCe.SqlCeConnection.FlushFailure">
      <summary>Occurs when the background flush fails.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnection.GetDatabaseInfo">
      <summary>Returns a set of Key Value pairs with information about locale, encryption mode, and case-sensitivity setting of the connected database.</summary>
      <returns>Sorted list with the name value pairs of locale, encryption mode, and case sensitivity.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnection.GetSchema">
      <summary>Returns schema information for the data source of this <see cref="T:System.Data.SqlServerCe.SqlCeConnection" />.</summary>
      <returns>A  <see cref="T:System.Data.DataTable" /> that contains schema information.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnection.GetSchema(System.String)">
      <summary>Returns schema information for the data source of this <see cref="T:System.Data.SqlServerCe.SqlCeConnection" /> using the specified string for the schema name.</summary>
      <returns>A <see cref="T:System.Data.DataTable" />  that contains schema information.</returns>
      <param name="collectionName">The schema name.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnection.GetSchema(System.String,System.String[])">
      <summary>Returns schema information for the data source of this <see cref="T:System.Data.SqlServerCe.SqlCeConnection" /> using the specified string for the schema name and the specified string array for the restriction values.</summary>
      <returns>A <see cref="T:System.Data.DataTable" /> that contains schema information.</returns>
      <param name="collectionName">The schema name.</param>
      <param name="restrictionValues">A set of restriction values.</param>
    </member>
    <member name="E:System.Data.SqlServerCe.SqlCeConnection.InfoMessage">
      <summary>Occurs when the .NET Compact Framework Data Provider for SQL Server sends a warning or an informational message.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnection.Open">
      <summary>Opens a database connection with the property settings specified by the <see cref="P:System.Data.SqlServerCe.SqlCeConnection.ConnectionString" />.</summary>
      <exception cref="T:System.InvalidOperationException">The connection is already open. </exception>
      <exception cref="T:System.Data.SqlServerCe.SqlCeException">A connection-level error occurred while opening the connection. </exception>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnection.ServerVersion">
      <summary>Returns the database version number as a string.</summary>
      <returns>A string of the version of SQL Server Compact.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnection.State">
      <summary>Gets the current state of the connection.</summary>
      <returns>A bitwise combination of the <see cref="T:System.Data.ConnectionState" /> values. The default is Closed.</returns>
    </member>
    <member name="E:System.Data.SqlServerCe.SqlCeConnection.StateChange">
      <summary>Occurs when the state of the connection changes.</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeConnectionStringBuilder">
      <summary>Provides a simple way to create and manage the contents of connection strings used by the <see cref="T:System.Data.SqlServerCe.SqlCeConnection" /> class.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.SqlServerCe.SqlCeConnectionStringBuilder" /> class using default values.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.SqlServerCe.SqlCeConnectionStringBuilder" /> class using the specified connection string that provides the data for the instance’s internal connection information.</summary>
      <param name="connectionString">The Connection String.</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.AutoshrinkThreshold">
      <summary>Gets or sets the percent of free space in the database file that is allowed before autoshrink begins.</summary>
      <returns>A value of 100 disables autoshrink. If not specified, the default value is 60.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.CaseSensitive">
      <summary>Gets or sets a value that indicates whether or not the database collation is case-sensitive.</summary>
      <returns>true if the database is case-sensitive; otherwise, false.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.Clear">
      <summary>Clears the contents of the <see cref="T:System.Data.SqlServerCe.SqlCeConnectionStringBuilder" /> instance.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.ContainsKey(System.String)">
      <summary>Determines whether the <see cref="T:System.Data.SqlServerCe.SqlCeConnectionStringBuilder" /> contains a specific key.</summary>
      <returns>true if the <see cref="T:System.Data.SqlServerCe.SqlCeConnectionStringBuilder" /> contains an element that has the specified key; otherwise, false.</returns>
      <param name="keyword">The key to locate in the <see cref="T:System.Data.SqlServerCe.SqlCeConnectionStringBuilder" />.</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.DataSource">
      <summary>Gets or sets the file path and name of the SQL Server Compact database.</summary>
      <returns>The file path and name of the SQL Server Compact database.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.DefaultLockEscalation">
      <summary>Gets or sets the number of locks a transaction will acquire before attempting escalation from row to page, or from page to table.</summary>
      <returns>The number of locks a transaction will acquire before attempting escalation from row to page, or from page to table.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.DefaultLockTimeout">
      <summary>Gets or sets the default number of milliseconds that a transaction will wait for a lock.</summary>
      <returns>The number of milliseconds that a transaction will wait for a lock. The default value is 2000 if not specified.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.Encrypt">
      <summary>Gets or sets a value that indicates whether or not the database is encrypted.</summary>
      <returns>true if the database is encrypted; otherwise, false. Must be set to true to enable encryption or false for no encryption.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.EncryptionMode">
      <summary>Gets or sets the encryption mode with which the database is to be created against.</summary>
      <returns>The encryption mode with which the database is to be created against.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.Enlist">
      <summary>Gets or sets a value that indicates whether a connection database is opened by using Enlist.</summary>
      <returns>true if a connection database is opened by using Enlist, otherwise, false.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.FileMode">
      <summary>Gets or sets the mode to use when opening the database file.</summary>
      <returns>The mode value to use when opening the database file.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.FlushInterval">
      <summary>Gets or sets the specified interval time (in seconds) before all committed transactions are flushed to disk.</summary>
      <returns>The specified interval time (in seconds). If not specified, the default value is 10.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.InitialLcid">
      <summary>Gets or sets the locale ID (LCID) to use with the database.</summary>
      <returns>The value of the locale ID (LCID).</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.IsFixedSize">
      <summary>Gets a value that indicates whether the SqlCeConnectionStringBuilder has a fixed size.</summary>
      <returns>true if the SqlCeConnectionStringBuilder has a fixed size; otherwise, false.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.Item(System.String)">
      <summary>Gets or sets the value associated with the specified key.</summary>
      <returns>The value associated with the specified key.</returns>
      <param name="keyword">The key of the item to get or set.</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.Keys">
      <summary>Gets an ICollection that contains the keys in the <see cref="T:System.Data.SqlServerCe.SqlCeConnectionStringBuilder" />.</summary>
      <returns>An ICollection that contains the keys in the <see cref="T:System.Data.SqlServerCe.SqlCeConnectionStringBuilder" />.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.MaxBufferSize">
      <summary>Gets or sets the largest amount of memory, in kilobytes that SQL Server Mobile can use before it starts flushing changes to disk.</summary>
      <returns>The largest amount of memory in kilobytes. The default value is 640 if not specified.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.MaxDatabaseSize">
      <summary>Gets or sets the maximum size of the database, in Megabytes.</summary>
      <returns>The maximum size of the database, in Megabytes. The default value is 128.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.Password">
      <summary>Gets or sets the database password, which can be up to 40 characters in length.</summary>
      <returns>The value of the database password.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.PersistSecurityInfo">
      <summary>Gets or sets a value that indicates whether the security-sensitive information, such as the password is not returned as part of the connection.</summary>
      <returns>true if the security-sensitive information is returned as part of the connection; otherwise, false. The default value is false.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.Remove(System.String)">
      <summary>Removes the entry with the specified key from the <see cref="T:System.Data.SqlServerCe.SqlCeConnectionStringBuilder" /> instance.</summary>
      <returns>true if the key existed within the connection string and was removed; false if the key did not exist.</returns>
      <param name="keyword">The key of the key/value pair to be removed from the connection string in this <see cref="T:System.Data.SqlServerCe.SqlCeConnectionStringBuilder" />.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.ShouldSerialize(System.String)">
      <summary>Indicates whether the specified key exists in this <see cref="T:System.Data.SqlServerCe.SqlCeConnectionStringBuilder" /> instance.</summary>
      <returns>true if the <see cref="T:System.Data.SqlServerCe.SqlCeConnectionStringBuilder" /> contains an entry with the specified key; otherwise, false.</returns>
      <param name="keyword">The key to locate in the <see cref="T:System.Data.SqlServerCe.SqlCeConnectionStringBuilder" />.</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.TempFileMaxSize">
      <summary>Gets or sets the maximum size of the temporary database file, in Megabytes.</summary>
      <returns>The maximum size of the temporary database file, in Megabytes. The default value is 128.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.TempFilePath">
      <summary>Gets or sets the location of the temporary database.</summary>
      <returns>The location of the temporary database.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
      <summary>Retrieves a value corresponding to the supplied key from this <see cref="T:System.Data.SqlServerCe.SqlCeconnectionStringBuilder" />.</summary>
      <returns>true if keyword was found within the connection string; otherwise, false.</returns>
      <param name="keyword">The key of the item to retrieve.</param>
      <param name="value">The value corresponding to keyword.</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.Values">
      <summary>Gets an ICollection that contains the values in the <see cref="T:System.Data.SqlServerCe.SqlCeConnectionStringBuilder" />.</summary>
      <returns>An ICollection than contains the values in the <see cref="T:System.Data.SqlServerCe.SqlCeConnectionStringBuilder" />.</returns>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeDataAdapter">
      <summary>Represents a set of data commands and a database connection that are used to fill the <see cref="T:System.Data.DataSet" /> and update the data source.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataAdapter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.SqlServerCe.SqlCeDataAdapter" /> class.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataAdapter.#ctor(System.Data.SqlServerCe.SqlCeCommand)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.SqlServerCe.SqlCeDataAdapter" /> class with the specified <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> as the <see cref="P:System.Data.SqlServerCe.SqlCeDataAdapter.SelectCommand" /> property.</summary>
      <param name="selectCommand">A <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> that is a SELECT statement. This <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> is set as the <see cref="P:System.Data.SqlServerCe.SqlCeDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.SqlServerCe.SqlCeDataAdapter" />. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataAdapter.#ctor(System.String,System.Data.SqlServerCe.SqlCeConnection)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.SqlServerCe.SqlCeDataAdapter" /> class with a <see cref="P:System.Data.SqlServerCe.SqlCeDataAdapter.SelectCommand" /> and a <see cref="T:System.Data.SqlServerCe.SqlCeConnection" /> object.</summary>
      <param name="selectCommandText">A <see cref="T:System.String" /> that is an SQL SELECT statement to be used as the <see cref="P:System.Data.SqlServerCe.SqlCeCommand.CommandText" /> of the <see cref="P:System.Data.SqlServerCe.SqlCeDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.SqlServerCe.SqlCeDataAdapter" />. </param>
      <param name="selectConnection">A <see cref="T:System.Data.SqlServerCe.SqlCeConnection" /> that represents the connection. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataAdapter.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.SqlServerCe.SqlCeDataAdapter" /> class with a <see cref="P:System.Data.SqlServerCe.SqlCeDataAdapter.SelectCommand" /> and a connection string.</summary>
      <param name="selectCommandText">A <see cref="T:System.String" /> that is an SQL SELECT statement to be used as the <see cref="P:System.Data.SqlServerCe.SqlCeCommand.CommandText" /> of the <see cref="P:System.Data.SqlServerCe.SqlCeDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.SqlServerCe.SqlCeDataAdapter" />. </param>
      <param name="selectConnectionString">The connection string. </param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeDataAdapter.DeleteCommand">
      <summary>Gets or sets an SQL statement for deleting records from the data set.</summary>
      <returns>A <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to delete records in the data source that correspond to deleted rows in the <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataAdapter.Dispose">
      <summary>Disposes the current instance.</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeDataAdapter.InsertCommand">
      <summary>Gets or sets an SQL statement used to insert new records into the data source.</summary>
      <returns>A <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to insert records in the data source that correspond to new rows in the <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="E:System.Data.SqlServerCe.SqlCeDataAdapter.RowUpdated">
      <summary>Occurs during a call to <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> after an update command is executed against the data source. The attempt to update is made and then this event fires.</summary>
    </member>
    <member name="E:System.Data.SqlServerCe.SqlCeDataAdapter.RowUpdating">
      <summary>Occurs during a call to <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> before an update command is executed against the data source. The attempt to update is made, and then this event fires.</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeDataAdapter.SelectCommand">
      <summary>Gets or sets an SQL statement used to select records in the data source.</summary>
      <returns>A <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> that is used during <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)" /> to select records from data source for placement in the <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataAdapter.System#ICloneable#Clone">
      <summary>For a description of this member, see <see cref="M:System.ICloneable.Clone" />.</summary>
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeDataAdapter.UpdateCommand">
      <summary>Gets or sets an SQL statement used to update records in the data source.</summary>
      <returns>A <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to update records in the data source that correspond to modified rows in the <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeDataReader">
      <summary>Provides a way of reading a forward-only stream of data rows from a data source. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.Close">
      <summary>Closes the <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> object.</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeDataReader.Depth">
      <summary>Gets a value indicating the depth of nesting for the current row.</summary>
      <returns>The depth of nesting for the current row. The .NET Compact Framework Data Provider for SQL Server Compact does not support nesting and always returns zero.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.Dispose">
      <summary>Releases the resources consumed by this <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" />.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by this <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" />, and optionally releases the managed resources as well.</summary>
      <param name="disposing">Specifies whether to release managed resources.</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeDataReader.FieldCount">
      <summary>Gets the number of columns in the query's SELECT clause.</summary>
      <returns>When not positioned in a valid recordset, 0; otherwise, the number of columns in the current record. </returns>
      <exception cref="T:System.InvalidOperationException">There is no current connection to a data source. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.Finalize">
      <summary>Releases unmanaged resources and performs other cleanup operations before the <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> is reclaimed by garbage collection.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetBoolean(System.Int32)">
      <summary>Gets the value of the specified column as a Boolean.</summary>
      <returns>The value of the column.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
      <exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">The value is null. </exception>
      <exception cref="T:System.InvalidOperationException">The operation is not valid. The <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> may be positioned after the last row in the result set. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetByte(System.Int32)">
      <summary>Gets the value of the specified column as a byte.</summary>
      <returns>The value of the specified column as a byte.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
      <exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">The value is null. </exception>
      <exception cref="T:System.InvalidOperationException">The operation is not valid. The <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> may be positioned after the last row in the result set. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Reads a stream of bytes from the specified column offset into the buffer as an array starting at the given buffer offset.</summary>
      <returns>The actual number of bytes read.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
      <param name="dataIndex">The index within the field from which to begin the read operation. </param>
      <param name="buffer">The buffer into which to read the stream of bytes. </param>
      <param name="bufferIndex">The index for <paramref name="buffer" /> to begin the read operation. </param>
      <param name="length">The maximum length to copy into the buffer. </param>
      <exception cref="T:System.InvalidOperationException">The operation is not valid. The <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> may be positioned after the last row in the result set. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetChar(System.Int32)">
      <summary>Not supported in the .NET Compact Framework Data Provider for SQL Server Compact.</summary>
      <returns>Returns <see cref="T:System.Char" />.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Reads a stream of characters from the specified column offset into the buffer as an array starting at the given buffer offset.</summary>
      <returns>The actual number of characters read.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
      <param name="dataIndex">The index within the row from which to begin the read operation. </param>
      <param name="buffer">The buffer into which to copy data. </param>
      <param name="bufferIndex">The index for <paramref name="buffer" /> to begin the read operation. </param>
      <param name="length">The number of characters to read. </param>
      <exception cref="T:System.InvalidOperationException">The operation is not valid. The <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> may be positioned after the last row in the result set. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetDataTypeName(System.Int32)">
      <summary>Gets the name of the source data type.</summary>
      <returns>The name of the back-end data type.</returns>
      <param name="index">The zero-based column ordinal. </param>
      <exception cref="T:System.InvalidOperationException">The operation is not valid. The <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> may be positioned after the last row in the result set. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetDateTime(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:System.DateTime" /> object.</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
      <exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">The value is null. </exception>
      <exception cref="T:System.InvalidOperationException">The operation is not valid. The <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> may be positioned after the last row in the result set. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetDecimal(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:System.Decimal" /> object.</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
      <exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">The value is null. </exception>
      <exception cref="T:System.InvalidOperationException">The operation is not valid. The <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> may be positioned after the last row in the result set. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetDouble(System.Int32)">
      <summary>Gets the value of the specified column as a double-precision floating point number.</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
      <exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">The value is null. </exception>
      <exception cref="T:System.InvalidOperationException">The operation is not valid. The <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> may be positioned after the last row in the result set. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetEnumerator">
      <returns>Returns <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetFieldType(System.Int32)">
      <summary>Gets the <see cref="T:System.Type" /> that is the data type of the object.</summary>
      <returns>The <see cref="T:System.Type" /> that is the data type of the object.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
      <exception cref="T:System.InvalidOperationException">The operation is not valid. The <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> may be positioned after the last row in the result set. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetFloat(System.Int32)">
      <summary>Gets the value of the specified column as a single-precision floating point number.</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
      <exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">The value is null. </exception>
      <exception cref="T:System.InvalidOperationException">The operation is not valid. The <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> may be positioned after the last row in the result set. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetGuid(System.Int32)">
      <summary>Gets the value of the specified column as a globally unique identifier (GUID).</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
      <exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">The value is null. </exception>
      <exception cref="T:System.InvalidOperationException">The operation is not valid. The <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> may be positioned after the last row in the result set. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetInt16(System.Int32)">
      <summary>Gets the value of the specified column as a 16-bit signed integer.</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
      <exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">The value is null. </exception>
      <exception cref="T:System.InvalidOperationException">The operation is not valid. The <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> may be positioned after the last row in the result set. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetInt32(System.Int32)">
      <summary>Gets the value of the specified column as a 32-bit signed integer.</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
      <exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">The value is null. </exception>
      <exception cref="T:System.InvalidOperationException">The operation is not valid. The <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> may be positioned after the last row in the result set. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetInt64(System.Int32)">
      <summary>Gets the value of the specified column as a 64-bit signed integer.</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
      <exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">The value is null. </exception>
      <exception cref="T:System.InvalidOperationException">The operation is not valid. The <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> may be positioned after the last row in the result set. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetName(System.Int32)">
      <summary>Gets the name of the specified column.</summary>
      <returns>The name of the specified column.</returns>
      <param name="index">The zero-based column ordinal. </param>
      <exception cref="T:System.InvalidOperationException">The operation is not valid. The <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> may be positioned after the last row in the result set. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetOrdinal(System.String)">
      <summary>Gets the column ordinal, given the name of the column.</summary>
      <returns>The zero-based column ordinal.</returns>
      <param name="name">The name of the column. </param>
      <exception cref="T:System.IndexOutOfRangeException">The name specified is not a valid column name. </exception>
      <exception cref="T:System.InvalidOperationException">The operation is not valid. The <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> may be positioned after the last row in the result set. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetProviderSpecificFieldType(System.Int32)">
      <summary>Gets a <see cref="T:System.Object" /> that is a representation of the underlying provider-specific field type.</summary>
      <returns>The <see cref="T:System.Type" /> object that describes the data type of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetSchemaTable">
      <summary>Returns a <see cref="T:System.Data.DataTable" /> that describes the column metadata of the <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" />.</summary>
      <returns>A <see cref="T:System.Data.DataTable" /> that describes the column metadata.</returns>
      <exception cref="T:System.InvalidOperationException">The operation is not valid. The <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> may be positioned after the last row in the result set. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetSqlBinary(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <returns>A <see cref="T:System.Data.SqlTypes.SqlBinary" />.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
      <exception cref="T:System.InvalidOperationException">The operation is not valid. The <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> may be positioned after the last row in the result set. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetSqlBoolean(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>The value of the column.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
      <exception cref="T:System.InvalidOperationException">The operation is not valid. The <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> may be positioned after the last row in the result set. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetSqlByte(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>A <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
      <exception cref="T:System.InvalidOperationException">The operation is not valid. The <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> may be positioned after the last row in the result set. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetSqlDateTime(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <returns>A <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
      <exception cref="T:System.InvalidOperationException">The operation is not valid. The <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> may be positioned after the last row in the result set. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetSqlDecimal(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>A <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
      <exception cref="T:System.InvalidOperationException">The operation is not valid. The <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> may be positioned after the last row in the result set. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetSqlDouble(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>A <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
      <exception cref="T:System.InvalidOperationException">The operation is not valid. The <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> may be positioned after the last row in the result set. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetSqlGuid(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <returns>A <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
      <exception cref="T:System.InvalidOperationException">The operation is not valid. The <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> may be positioned after the last row in the result set. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetSqlInt16(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>A <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
      <exception cref="T:System.InvalidOperationException">The operation is not valid. The <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> may be positioned after the last row in the result set. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetSqlInt32(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>A <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
      <exception cref="T:System.InvalidOperationException">The operation is not valid. The <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> may be positioned after the last row in the result set. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetSqlInt64(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>A <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
      <exception cref="T:System.InvalidOperationException">The operation is not valid. The <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> may be positioned after the last row in the result set. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetSqlMoney(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>A <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
      <exception cref="T:System.InvalidOperationException">The operation is not valid. The <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> may be positioned after the last row in the result set. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetSqlSingle(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>A <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
      <exception cref="T:System.InvalidOperationException">The operation is not valid. The <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> may be positioned after the last row in the result set. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetSqlString(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>A <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
      <exception cref="T:System.InvalidOperationException">The operation is not valid. The <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> may be positioned after the last row in the result set. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetString(System.Int32)">
      <summary>Gets the value of the specified column as a string.</summary>
      <returns>The value of the specified column.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
      <exception cref="T:System.InvalidCastException">The specified cast is not valid. </exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">The value is null. </exception>
      <exception cref="T:System.InvalidOperationException">The operation is not valid. The <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> may be positioned after the last row in the result set. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetValue(System.Int32)">
      <summary>Gets the value of the column at the specified ordinal in its native format.</summary>
      <returns>The value to return.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
      <exception cref="T:System.InvalidOperationException">The operation is not valid. The <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> may be positioned after the last row in the result set. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetValues(System.Object[])">
      <summary>Gets all the attribute columns in the current row.</summary>
      <returns>The number of instances of <see cref="T:System.Object" /> in the array.</returns>
      <param name="values">An array of <see cref="T:System.Object" /> into which to copy the attribute columns. </param>
      <exception cref="T:System.InvalidOperationException">The operation is not valid. The <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> may be positioned after the last row in the result set. </exception>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeDataReader.HasRows">
      <summary>Gets a value that indicates whether the <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> contains one or more rows</summary>
      <returns>A <see cref="T:System.Boolean" /> value.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeDataReader.HiddenFieldCount">
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeDataReader.IsClosed">
      <summary>Indicates whether the data reader is closed.</summary>
      <returns>true if the <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> is closed; otherwise, false.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.IsCommandBehavior(System.Data.CommandBehavior)">
      <summary>Determines whether the specified <see cref="T:System.Data.CommandBehavior" /> matches that of this <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" />.</summary>
      <returns>true if the behaviors match; otherwise, false.</returns>
      <param name="condition">The command behavior.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.IsDBNull(System.Int32)">
      <summary>Gets a value indicating whether the column contains nonexistent or missing values.</summary>
      <returns>true if the specified column value is equivalent to <see cref="T:System.DBNull" />; otherwise, false.</returns>
      <param name="ordinal">The zero-based column ordinal. </param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeDataReader.Item(System.Int32)">
      <summary>Gets the value of the specified column in its native format given the column ordinal.</summary>
      <returns>The value of the specified column in its native format.</returns>
      <param name="index">The column ordinal. </param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeDataReader.Item(System.String)">
      <summary>Gets the value of the specified column in its native format given the column name.</summary>
      <returns>The value of the specified column in its native format.</returns>
      <param name="name">The column name. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.NextResult">
      <summary>Not supported in the .NET Compact Framework Data Provider for SQL Server Compact.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.OnMove"></member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.Read">
      <summary>Advances <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> to the next record.</summary>
      <returns>true if there are more rows; otherwise, false.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeDataReader.RecordsAffected">
      <summary>Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.</summary>
      <returns>The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.Seek(System.Data.SqlServerCe.DbSeekOptions,System.Object[])">
      <summary>Places the <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> on the record with indexed values that match the specified parameters.</summary>
      <returns>A Boolean value; true indicates the cursor is positioned on a row.</returns>
      <param name="dbSeekOptions">The <see cref="T:System.Data.SqlServerCe.DbSeekOptions" /> to use.</param>
      <param name="index">The index of the record.</param>
      <exception cref="T:System.Data.SqlServerCe.SqlCeException">The value was not found, or another error occurred. </exception>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeEngine">
      <summary>Represents the properties, methods, and other objects of the SQL Server Compact Engine object. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeEngine.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.SqlServerCe.SqlCeEngine" /> class.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeEngine.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.SqlServerCe.SqlCeEngine" /> class with the specified local connection string.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeEngine.Compact(System.String)">
      <summary>Reclaims wasted space in the SQL Server Compact database by creating a new database file from the existing file. This method is also used to change the collating order, encryption, or password settings of the database. </summary>
      <param name="connectionString">The connection string to the destination database. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeEngine.CreateDatabase">
      <summary>Creates a new database.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeEngine.Dispose">
      <summary>Releases all SQL Server Compact <see cref="T:System.Data.SqlServerCe.SqlCeEngine" /> resources.</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeEngine.LocalConnectionString">
      <summary>Gets or sets the connection string to the SQL Server Compact database.</summary>
      <returns>The connection string.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeEngine.Repair(System.String,System.Data.SqlServerCe.RepairOption)">
      <summary>Repairs a corrupted database.</summary>
      <param name="connectionString">The local connection string to the database.</param>
      <param name="options">The RepairOption to use when repairing the database.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeEngine.Shrink">
      <summary>Reclaims wasted space in the SQL Server Compact database by moving empty pages to the end of the file, and then truncating the file.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeEngine.Upgrade">
      <summary>Upgrades a SQL Server Compact database from version 3.1 to 3.5. After the upgrade, the database will be encrypted if the source database was encrypted. If it was not, the upgraded database will be unencrypted.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeEngine.Upgrade(System.String)">
      <summary>Upgrades a SQL Server Compact database from version 3.1 to 3.5. The destination database will be encrypted if the encryption mode was specified in the Destination Connection string. The collation of the database will be case sensitive if the case-sensitive property is set to true in the connection string.</summary>
      <param name="destConnectionString">The connection string to the destination database. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeEngine.Verify">
      <summary>Recalculates the checksums for each page in the database and compares the new checksums to the expected values.</summary>
      <returns>True if the checksums match and there is no database corruption; otherwise, false. </returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeEngine.Verify(System.Data.SqlServerCe.VerifyOption)">
      <summary>Verifies the integrity of the database based on the VerifyOption.</summary>
      <returns>True if there is no database corruption; otherwise, false.</returns>
      <param name="option">Determines the level of database verification to use. For information about available option values, see <see cref="T:System.Data.SqlServerCe.VerifyOption" />.</param>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeError">
      <summary>Collects information relevant to a warning or error returned by the data source. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeError.ErrorParameters">
      <summary>Gets the last three error parameters. Error parameters are used by SQL Server Compact to provide additional details about an error.</summary>
      <returns>A string array that contains the last three error parameters.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeError.HResult">
      <summary>Returns an HRESULT value that identifies the type of error.</summary>
      <returns>The HR number that identifies the type of error.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeError.Message">
      <summary>Gets the text describing the error.</summary>
      <returns>The text describing the error.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeError.NativeError">
      <summary>Gets the native error number of the <see cref="T:System.Data.SqlServerCe.SqlCeError" />. For more information about these errors, see "SQL Server Compact Errors" in the Troubleshooting section of SQL Server Compact Books Online.</summary>
      <returns>The native error number of the <see cref="T:System.Data.SqlServerCe.SqlCeError" />.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeError.NumericErrorParameters">
      <summary>Gets the first three error parameters. Error parameters are used by SQL Server Compact to provide additional details about an error.</summary>
      <returns>An integer array that contains the first three error parameters.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeError.Source">
      <summary>Gets the name of the provider that generated the error.</summary>
      <returns>The name of the provider that generated the error. For example, the <see cref="P:System.Data.SqlServerCe.SqlCeError.Source" /> property may return a string such as "OLE DB Provider for SQL Server Compact."</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeError.ToString">
      <summary>Gets the complete text of the error message.</summary>
      <returns>The complete text of the error message.</returns>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeErrorCollection">
      <summary>Collects all errors generated by the .NET Compact Framework Data Provider for SQL Server Compact. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeErrorCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements of the <see cref="T:System.Data.SqlServerCe.SqlCeErrorCollection" /> into an <see cref="T:System.Array" />, starting at the given index within the <see cref="T:System.Array" />.</summary>
      <param name="array">The <see cref="T:System.Array" /> into which to copy the elements. </param>
      <param name="index">The starting index of the <paramref name="array" />. </param>
      <exception cref="T:System.ArgumentException">The sum of <paramref name="index" /> and the number of elements in the <see cref="T:System.Data.SqlServerCe.SqlCeErrorCollection" /> is greater than the <see cref="P:System.Array.Length" /> of the <see cref="T:System.Array" />. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="array" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> is not valid for the <paramref name="array" />. </exception>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeErrorCollection.Count">
      <summary>Gets the number of <see cref="T:System.Data.SqlServerCe.SqlCeError" /> objects in the collection.</summary>
      <returns>The total number of <see cref="T:System.Data.SqlServerCe.SqlCeError" /> objects in the collection.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeErrorCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the <see cref="T:System.Data.SqlServerCe.SqlCeErrorCollection" />.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" />
      </returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeErrorCollection.Item(System.Int32)">
      <summary>Gets the error at the specified index.</summary>
      <returns>A <see cref="T:System.Data.SqlServerCe.SqlCeError" /> that contains the error at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Data.SqlServerCe.SqlCeError" /> to retrieve. </param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeErrorCollection.System#Collections#ICollection#IsSynchronized"></member>
    <member name="P:System.Data.SqlServerCe.SqlCeErrorCollection.System#Collections#ICollection#SyncRoot"></member>
    <member name="T:System.Data.SqlServerCe.SqlCeException">
      <summary>The exception thrown when the underlying provider returns a warning or error from a SQL Server Compact data source. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Constructor that helps in serialization.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeException.Errors">
      <summary>Gets a collection of one or more <see cref="T:System.Data.SqlServerCe.SqlCeError" /> objects that contain detailed information about exceptions generated by the .NET Compact Framework Data Provider for SQL Server Compact.</summary>
      <returns>The <see cref="T:System.Data.SqlServerCe.SqlCeErrorCollection" /> object that contains the collected instances of the <see cref="T:System.Data.SqlServerCe.SqlCeError" /> class for the exception.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>[SECURITY CRITICAL] Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data required to serialize the object.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeException.HResult">
      <summary>Gets the HRESULT value of the exception. This value is the same as the value of <see cref="P:System.Data.SqlServerCe.SqlCeError.HResult" /> for the first instance of <see cref="T:System.Data.SqlServerCe.SqlCeError" /> in the <see cref="T:System.Data.SqlServerCe.SqlCeErrorCollection" /> for the exception.</summary>
      <returns>The HRESULT value.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeException.Message">
      <summary>Gets the text describing the first instance of <see cref="T:System.Data.SqlServerCe.SqlCeError" /> in the <see cref="T:System.Data.SqlServerCe.SqlCeErrorCollection" /> for this exception.</summary>
      <returns>The text describing the error.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeException.NativeError">
      <summary>Gets the native error number of the first <see cref="T:System.Data.SqlServerCe.SqlCeError" /> in the <see cref="T:System.Data.SqlServerCe.SqlCeErrorCollection" />. For more information about the error, see the "SQL Server Compact Errors" topic in the Troubleshooting section of SQL Server Compact Books Online.</summary>
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeException.Source">
      <summary>Gets the name of the OLE DB provider that generated the error.</summary>
      <returns>The name of the OLE DB provider that generated the error.</returns>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeFlushFailureEventArgs">
      <summary>Encapsulates event arguments for the <see cref="E:System.Data.SqlServerCe.SqlCeConnection.FlushFailure" /> event.</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeFlushFailureEventArgs.Errors">
      <summary>The collection of <see cref="T:System.Data.SqlServerCe.SqlCeError" /> objects that caused the flush to fail.</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeFlushFailureEventArgs.Message">
      <summary>Gets the text describing the <see cref="T:System.Data.SqlServerCe.SqlCeError" /> that caused the flush to fail. </summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeFlushFailureEventArgs.ToString"></member>
    <member name="T:System.Data.SqlServerCe.SqlCeFlushFailureEventHandler">
      <summary>The delegate that must be implemented to listen for <see cref="E:System.Data.SqlServerCe.SqlCeConnection.FlushFailure" /> events.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The <see cref="T:System.Data.SqlServerCe.SqlCeFlushFailureEventArgs" /> that contains the event data. </param>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeInfoMessageEventArgs">
      <summary>Provides data for the <see cref="E:System.Data.SqlServerCe.SqlCeConnection.InfoMessage" /> event. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeInfoMessageEventArgs.Errors">
      <summary>Gets the collection of warnings sent from the data source.</summary>
      <returns>The collection of warnings sent from the data source.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeInfoMessageEventArgs.Message">
      <summary>Gets the complete text of the error sent from the data source.</summary>
      <returns>The complete text of the error.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeInfoMessageEventArgs.ToString">
      <summary>Retrieves a string representation of the <see cref="E:System.Data.SqlServerCe.SqlCeConnection.InfoMessage" /> event.</summary>
      <returns>A string representing the <see cref="E:System.Data.SqlServerCe.SqlCeConnection.InfoMessage" /> event.</returns>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeInfoMessageEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Data.SqlServerCe.SqlCeConnection.InfoMessage" /> event of a <see cref="T:System.Data.SqlServerCe.SqlCeConnection" />.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">The <see cref="T:System.Data.SqlServerCe.SqlCeInfoMessageEventArgs" /> that contains the event data. </param>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeInvalidDatabaseFormatException">
      <summary> The exception thrown when the underlying provider returns an error from a Microsoft SQL Server Compact data source when SQL Server Compact attempts to open a database file of an older or newer version. </summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeInvalidDatabaseFormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Constructor that helps in serialization.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeInvalidDatabaseFormatException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>[SECURITY CRITICAL] Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the object. </summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeLockTimeoutException">
      <summary>This exception is thrown if the lock timeout has been reached.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeLockTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Constructor that helps in serialization. </summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeLockTimeoutException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>[SECURITY CRITICAL]  Populates a SerializationInfo with the data needed to serialize the  object. </summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeParameter">
      <summary>Represents a parameter to a <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> and, optionally, its mapping to a <see cref="T:System.Data.DataSet" /> column. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> class.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameter.#ctor(System.String,System.Data.SqlDbType)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> class with the parameter name and data type.</summary>
      <param name="name">The name of the parameter to map. </param>
      <param name="dataType">One of the <see cref="T:System.Data.SqlDbType" /> values. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> class with the parameter name, data type, and length.</summary>
      <param name="name">The name of the parameter to map. </param>
      <param name="dataType">One of the <see cref="T:System.Data.SqlDbType" /> values. </param>
      <param name="size">The length of the parameter. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> class with the parameter name, data type, length, and other properties. SQL Server Compact supports only input parameters.</summary>
      <param name="parameterName">The name of the parameter. </param>
      <param name="dbType">One of the <see cref="T:System.Data.SqlDbType" /> values. </param>
      <param name="size">The length of the parameter. </param>
      <param name="isNullable">true if the value of the field can be null; otherwise, false. </param>
      <param name="precision">The total number of digits to the left and right of the decimal point to which <see cref="P:System.Data.SqlServerCe.SqlCeParameter.Value" /> is resolved. </param>
      <param name="scale">The total number of decimal places to which <see cref="P:System.Data.SqlServerCe.SqlCeParameter.Value" /> is resolved. </param>
      <param name="sourceColumn">The name of the source column. </param>
      <param name="sourceVersion">One of the <see cref="T:System.Data.DataRowVersion" /> values. </param>
      <param name="value">An <see cref="T:System.Object" /> that is the value of the <see cref="T:System.Data.SqlServerCe.SqlCeParameter" />. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> class with the parameter name, data type, length, parameter direction, and other properties. SQL Server Compact only supports input parameters.</summary>
      <param name="parameterName">The name of the parameter.</param>
      <param name="dbType">One of the <see cref="T:System.Data.SqlDbType" /> values. </param>
      <param name="size">The length of the parameter. </param>
      <param name="direction">The <see cref="P:System.Data.ParameterDirection" /> to use.</param>
      <param name="isNullable">true if the value of the field can be null; otherwise, false. </param>
      <param name="precision">The total number of digits to the left and right of the decimal point to which <see cref="P:System.Data.SqlServerCe.SqlCeParameter.Value" /> is resolved. </param>
      <param name="scale">The total number of decimal places to which <see cref="P:System.Data.SqlServerCe.SqlCeParameter.Value" /> is resolved. </param>
      <param name="sourceColumn">The name of the source column. </param>
      <param name="sourceVersion">One of the <see cref="T:System.Data.DataRowVersion" /> values. </param>
      <param name="value">An <see cref="T:System.Object" /> that is the value of the <see cref="T:System.Data.SqlServerCe.SqlCeParameter" />. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> class with the parameter name, data type, length, and source column name.</summary>
      <param name="name">The name of the parameter to map. </param>
      <param name="dataType">One of the <see cref="T:System.Data.SqlDbType" /> values. </param>
      <param name="size">The length of the parameter. </param>
      <param name="sourceColumn">The name of the source column. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameter.#ctor(System.String,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> class with the parameter name and the value of the new <see cref="T:System.Data.SqlServerCe.SqlCeParameter" />.</summary>
      <param name="name">The name of the parameter to map. </param>
      <param name="value">The value of the new <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> object. </param>
      <exception cref="T:System.ArgumentException">The value supplied for the parameter cannot be converted to a database type supported by SQL Server Compact. </exception>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameter.DbType">
      <summary>Gets or sets the <see cref="T:System.Data.DbType" /> of the parameter.</summary>
      <returns>One of the <see cref="T:System.Data.DbType" /> values. The default is <see cref="F:System.Data.DbType.String" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The property was not set to a valid <see cref="T:System.Data.DbType" />. </exception>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameter.Direction">
      <summary>This property always returns ParameterDirection.Input for .NET Compact Framework Data Provider for SQL Server Compact. Setting this property to a different value causes an <see cref="T:System.InvalidOperationException" /> to be thrown.</summary>
      <returns>This property always returns ParameterDirection.Input for SQL Server Compact Data Provider. Setting this property is not supported.</returns>
      <exception cref="T:System.InvalidOperationException">The user attempted to set this property. </exception>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameter.IsNullable">
      <summary>Gets or sets a value indicating whether or not the parameter accepts null values.</summary>
      <returns>true if null values are accepted; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameter.Offset"></member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameter.ParameterName">
      <summary>Gets or sets the name of the <see cref="T:System.Data.SqlServerCe.SqlCeParameter" />.</summary>
      <returns>The name of the <see cref="T:System.Data.SqlServerCe.SqlCeParameter" />. The default is an empty string.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameter.Precision">
      <summary>Gets or sets the maximum number of digits used to represent the <see cref="P:System.Data.SqlServerCe.SqlCeParameter.Value" /> property.</summary>
      <returns>The maximum number of digits used to represent the <see cref="P:System.Data.SqlServerCe.SqlCeParameter.Value" /> property. The default value is 0.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameter.ResetDbType">
      <summary>Resets the type associated with this <see cref="T:System.Data.SqlServerCe.SqlCeParameter" />.</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameter.Scale">
      <summary>Gets or sets the number of decimal places to which <see cref="P:System.Data.SqlServerCe.SqlCeParameter.Value" /> is resolved.</summary>
      <returns>The number of decimal places to which <see cref="P:System.Data.SqlServerCe.SqlCeParameter.Value" /> is resolved. The default is 0.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameter.Size">
      <summary>Gets or sets the maximum length of the data within the column.</summary>
      <returns>The maximum length of the data within the column. The default value is inferred from the parameter value.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameter.SourceColumn">
      <summary>Gets or sets the name of the source column mapped to the <see cref="T:System.Data.DataSet" /> and used for loading or returning the <see cref="P:System.Data.SqlServerCe.SqlCeParameter.Value" />.</summary>
      <returns>The name of the source column mapped to the <see cref="T:System.Data.DataSet" />. The default is an empty string.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameter.SourceColumnNullMapping"></member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameter.SourceVersion">
      <summary>Gets or sets the <see cref="T:System.Data.DataRowVersion" /> to use when loading <see cref="P:System.Data.SqlServerCe.SqlCeParameter.Value" />.</summary>
      <returns>One of the <see cref="T:System.Data.DataRowVersion" /> values. The default is Current.</returns>
      <exception cref="T:System.ArgumentException">The property was not set to one of the <see cref="T:System.Data.DataRowVersion" /> values. </exception>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameter.SqlDbType">
      <summary>Gets or sets the <see cref="T:System.Data.SqlDbType" /> of the parameter.</summary>
      <returns>One of the <see cref="T:System.Data.SqlDbType" /> values. The default is NVarChar.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameter.System#ICloneable#Clone"></member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameter.ToString">
      <summary>Gets a string containing the <see cref="P:System.Data.SqlServerCe.SqlCeParameter.ParameterName" />.</summary>
      <returns>A string containing the <see cref="P:System.Data.SqlServerCe.SqlCeParameter.ParameterName" />.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameter.Value">
      <summary>Gets or sets the value of the parameter.</summary>
      <returns>An <see cref="T:System.Object" /> that is the value of the parameter. The default value is null.</returns>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeParameterCollection">
      <summary>Collects all parameters relevant to a <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> as well as their respective mappings to <see cref="T:System.Data.DataSet" /> columns.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.Add(System.Data.SqlServerCe.SqlCeParameter)">
      <summary>Adds the specified <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> to the <see cref="T:System.Data.SqlServerCe.SqlCeParameterCollection" />.</summary>
      <returns>A reference to the new <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> object.</returns>
      <param name="value">The <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> to add to the collection. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.Add(System.Object)">
      <summary>Adds a <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> object to the <see cref="T:System.Data.SqlServerCe.SqlCeCommand" />.</summary>
      <returns>The index of the new <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> object in the collection.</returns>
      <param name="value">The <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> object to add to the collection. </param>
      <exception cref="T:System.InvalidCastException">The parameter passed was not a <see cref="T:System.Data.SqlServerCe.SqlCeParameter" />. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.Add(System.String,System.Data.SqlDbType)">
      <summary>Adds a <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> to the <see cref="T:System.Data.SqlServerCe.SqlCeParameterCollection" /> given the parameter name and data type.</summary>
      <returns>A reference to the new <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> object.</returns>
      <param name="parameterName">The name of the parameter. </param>
      <param name="type">One of the SqlDbType values. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.Add(System.String,System.Data.SqlDbType,System.Int32)">
      <summary>Adds a <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> to the <see cref="T:System.Data.SqlServerCe.SqlCeParameterCollection" /> given the parameter name, data type, and column width.</summary>
      <returns>A reference to the new <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> object.</returns>
      <param name="parameterName">The name of the parameter. </param>
      <param name="type">One of the SqlDbType values. </param>
      <param name="size">The width of the column. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.Add(System.String,System.Data.SqlDbType,System.Int32,System.String)">
      <summary>Adds a <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> to the <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> given the parameter name, data type, column width, and source column name.</summary>
      <returns>A reference to the new <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> object.</returns>
      <param name="parameterName">The name of the parameter. </param>
      <param name="type">One of the SqlDbType values. </param>
      <param name="size">The width of the column. </param>
      <param name="sourceColumn">The name of the source column. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.Add(System.String,System.Object)">
      <summary>Adds a <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> to the <see cref="T:System.Data.SqlServerCe.SqlCeParameterCollection" /> given the parameter name and value.</summary>
      <returns>A reference to the new <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> object.</returns>
      <param name="parameterName">The name of the parameter. </param>
      <param name="value">The <see cref="T:System.Object" /> value of the <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> to add to the collection. </param>
      <exception cref="T:System.InvalidCastException">The object supplied as the <paramref name="value" /> parameter cannot be converted to a string. This can happen if the object is not a primitive type, SqlDbType or byte array. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.AddRange(System.Array)">
      <summary>Adds an array of <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> objects to <see cref="T:System.Data.SqlServerCe.SqlCeParameterCollection" />.</summary>
      <param name="values">An array of values of type <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> to add to the collection.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.AddWithValue(System.String,System.Object)">
      <summary>Adds a new <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> to the <see cref="T:System.Data.SqlServerCe.SqlCeParameterCollection" /> and sets its value.</summary>
      <param name="parameterName">Name of the <see cref="T:System.Data.SqlServerCe.SqlCeParameter" />.</param>
      <param name="value">Value of the <paramref name="parameterName" />.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.Contains(System.Object)">
      <summary>Gets a value indicating whether or not a <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> object exists in the collection.</summary>
      <returns>true if the collection contains the <see cref="T:System.Data.SqlServerCe.SqlCeParameter" />; otherwise, false.</returns>
      <param name="value">The value of the <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> object to find. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.Contains(System.String)">
      <summary>Gets a value indicating whether a <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> with the specified parameter name exists in the collection.</summary>
      <returns>true if the collection contains the parameter; otherwise, false.</returns>
      <param name="value">The name of the parameter. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> objects from the <see cref="T:System.Data.SqlServerCe.SqlCeParameterCollection" /> to the specified array.</summary>
      <param name="array">The <see cref="T:System.Array" /> into which to copy the <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> objects. </param>
      <param name="index">The starting index of the array. </param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameterCollection.Count">
      <summary>Gets the number of <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> objects in the collection.</summary>
      <returns>The number of <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> objects in the collection.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.GetEnumerator"></member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.IndexOf(System.Object)">
      <summary>Gets the location of the <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> object in the collection.</summary>
      <returns>The zero-based location of the <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> in the collection.</returns>
      <param name="value">The <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> object to locate. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.IndexOf(System.String)">
      <summary>Gets the location of the <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> in the collection with the specified parameter name.</summary>
      <returns>The location of the <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> in the collection.</returns>
      <param name="parameterName">The name of the parameter to find. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.Insert(System.Int32,System.Object)">
      <summary>Inserts a <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> in the collection at the specified index.</summary>
      <param name="index">The zero-based index where the parameter is to be inserted within the collection. </param>
      <param name="value">The <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> to add to the collection. </param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameterCollection.IsFixedSize"></member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameterCollection.IsReadOnly"></member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameterCollection.IsSynchronized"></member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameterCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> at the specified index.</summary>
      <returns>The <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> at the specified index.</returns>
      <param name="index">The zero-based index of the parameter to retrieve. </param>
      <exception cref="T:System.IndexOutOfRangeException">The index specified does not exist. </exception>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameterCollection.Item(System.String)">
      <summary>Gets or sets the <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> with the specified name.</summary>
      <returns>The <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> with the specified name.</returns>
      <param name="parameterName">The name of the parameter to retrieve. </param>
      <exception cref="T:System.IndexOutOfRangeException">The name specified does not exist. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.Remove(System.Object)">
      <summary>Removes the specified <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> from the collection.</summary>
      <param name="value">The <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> object to remove from the collection. </param>
      <exception cref="T:System.SystemException">The parameter does not exist. </exception>
      <exception cref="T:System.InvalidCastException">The parameter is not a <see cref="T:System.Data.SqlServerCe.SqlCeParameter" />. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> at the specified index from the collection.</summary>
      <param name="index">The zero-based index of the parameter to remove. </param>
      <exception cref="T:System.IndexOutOfRangeException">The specified index does not exist. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.RemoveAt(System.String)">
      <summary>Removes the <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> with the specified name from the collection.</summary>
      <param name="parameterName">The name of the parameter to remove. </param>
      <exception cref="T:System.ArgumentException">A parameter with the specified name does not exist in the collection. </exception>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameterCollection.SyncRoot"></member>
    <member name="T:System.Data.SqlServerCe.SqlCeProviderFactory">
      <summary>Represents a set of methods for creating instances of a provider's implementation of the data source classes.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeProviderFactory.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.SqlServerCe.SqlCeProviderFactory" /> class. </summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeProviderFactory.CreateCommand">
      <summary>Returns a new instance of the provider's class that implements the <see cref="T:System.Data.Common.DbCommand" />.</summary>
      <returns>A new instance of <see cref="System.Data.Common.DbCommand" />.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeProviderFactory.CreateCommandBuilder">
      <summary>Returns a new instance of the provider's class that implements the <see cref="System.Data.Common.DbCommandBuilder" />.</summary>
      <returns>A new instance of <see cref="System.Data.Common.DbCommandBuilder" />.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeProviderFactory.CreateConnection">
      <summary>Returns a new instance of the provider's class that implements the <see cref="System.Data.Common.DbConnection" />. </summary>
      <returns>A new instance of <see cref="System.Data.Common.DbConnection" />.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeProviderFactory.CreateConnectionStringBuilder">
      <summary>Returns a new instance of the provider's class that implements the class.</summary>
      <returns>A new instance of the class.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeProviderFactory.CreateDataAdapter">
      <summary>Returns a new instance of the provider's class that implements the <see cref="System.Data.Common.DbDataAdapter" />.</summary>
      <returns>A new instance of <see cref="System.Data.Common.DbDataAdapter." /></returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeProviderFactory.CreateParameter">
      <summary>Returns a new instance of the provider's class that implements the <see cref="System.Data.Common.DbParameter" />.</summary>
      <returns>A new instance of <see cref="System.Data.Common.DbParameter" />. </returns>
    </member>
    <member name="F:System.Data.SqlServerCe.SqlCeProviderFactory.Instance">
      <summary>An instance of <see cref="T:System.Data.SqlServerCe.SqlCeProviderFactory" />.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeProviderFactory.System#IServiceProvider#GetService(System.Type)">
      <summary>Gets the service type.</summary>
      <returns>Returns <see cref="T:System.Object" />.</returns>
      <param name="serviceType">The service type.</param>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeRemoteDataAccess">
      <summary>[SECURITY CRITICAL] Initializes a new instance of the <see cref="T:System.Data.SqlServerCe.SqlCeRemoteDataAccess" /> object. For more information about Remote Data Access, see Using Remote Data Access (RDA).</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeRemoteDataAccess.#ctor">
      <summary>[SECURITY CRITICAL] Initializes a new instance of the <see cref="T:System.Data.SqlServerCe.SqlCeRemoteDataAccess" /> object.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeRemoteDataAccess.#ctor(System.String,System.String)">
      <summary>[SECURITY CRITICAL] Initializes a new instance of the <see cref="T:System.Data.SqlServerCe.SqlCeRemoteDataAccess" /> object and configures it for anonymous access to Microsoft Internet Information Services (IIS).</summary>
      <param name="internetUrl">The URL used to connect to the SQL Server Compact Server Agent. </param>
      <param name="localConnectionString">The OLE DB connection string for the SQL Server Compact database. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeRemoteDataAccess.#ctor(System.String,System.String,System.String,System.String)">
      <summary>[SECURITY CRITICAL] Initializes a new instance of the <see cref="T:System.Data.SqlServerCe.SqlCeRemoteDataAccess" /> object and configures it for a Basic or Integrated Windows authentication to Microsoft Internet Information Services (IIS).</summary>
      <param name="internetUrl">The URL used to connect to the SQL Server Compact Server Agent. </param>
      <param name="internetLogin">The login name used when connecting to the SQL Server Compact Server Agent. </param>
      <param name="internetPassword">The password used when connecting to the SQL Server Compact Server Agent. </param>
      <param name="localConnectionString">The OLE DB connection string for the SQL Server Compact database. </param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeRemoteDataAccess.CompressionLevel">
      <summary>[SECURITY CRITICAL] Specifies the amount of compression that will be used by the compression routines during Push and Pull operations.</summary>
      <returns>The compression level that has been set.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeRemoteDataAccess.ConnectionManager">
      <summary>[SECURITY CRITICAL] Enables the <see cref="T:System.Data.SqlServerCe.SqlCeRemoteDataAccess" /> object to use the smart device's Connection Manager API to establish a network connection. The connection is released at the end of synchronization.</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeRemoteDataAccess.ConnectionRetryTimeout">
      <summary>[SECURITY CRITICAL] Specifies how long (in seconds) the SQL Server Compact client will continue to retry sending failed requests.</summary>
      <returns>The <see cref="P:System.Data.SqlServerCe.SqlCeRemoteDataAccess.ConnectionRetryTimeout" /> value, with a default value of 120 seconds.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeRemoteDataAccess.ConnectTimeout">
      <summary>[SECURITY CRITICAL] Gets or sets the amount of time, in milliseconds, that the <see cref="T:System.Data.SqlServerCe.SqlCeRemoteDataAccess" /> object waits for a connection to the server.</summary>
      <returns>An <see cref="T:System.Int32" /> value that represents the time-out, in milliseconds, with no default.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeRemoteDataAccess.Dispose">
      <summary>[SECURITY CRITICAL] Releases all unmanaged resources.</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeRemoteDataAccess.InternetLogin">
      <summary>[SECURITY CRITICAL] Specifies the Microsoft Internet Information Services (IIS) login name used when connecting to the SQL Server Compact Server Agent.</summary>
      <returns>The IIS login name used when connecting to the SQL Server Compact Server Agent. The default is no login.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeRemoteDataAccess.InternetPassword">
      <summary>[SECURITY CRITICAL] Specifies the Microsoft Internet Information Services (IIS) password used when connecting to the SQL Server Compact Server Agent.</summary>
      <returns>The IIS password string used when connecting to the SQL Server Compact Server Agent. The default is no password.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeRemoteDataAccess.InternetProxyLogin">
      <summary>[SECURITY CRITICAL] Specifies the login name used when connecting to a proxy server (defined in the <see cref="P:System.Data.SqlServerCe.SqlCeRemoteDataAccess.InternetProxyServer" /> property) that requires authentication.</summary>
      <returns>The proxy server login name. The default is no login.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeRemoteDataAccess.InternetProxyPassword">
      <summary>[SECURITY CRITICAL] Specifies the password used when connecting to a proxy server (defined in the <see cref="P:System.Data.SqlServerCe.SqlCeRemoteDataAccess.InternetProxyServer" /> property) that requires authentication.</summary>
      <returns>The proxy server password string. The default is no password.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeRemoteDataAccess.InternetProxyServer">
      <summary>[SECURITY CRITICAL] Specifies the proxy server to use when accessing the HTTP resource specified in the <see cref="P:System.Data.SqlServerCe.SqlCeRemoteDataAccess.InternetUrl" /> property.</summary>
      <returns>The proxy server name (or IP address) and the port number (<paramref name="ProxyServerName:Port" />) used when accessing the specified HTTP resource.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeRemoteDataAccess.InternetUrl">
      <summary>[SECURITY CRITICAL] Specifies the URL used to connect to the SQL Server Compact Server Agent. The SQL Server Compact Server Agent is the Microsoft Internet Information Services (IIS) ISAPI DLL that connects the SQL Server Compact client to the Microsoft SQL Server Database. This property must be specified.</summary>
      <returns>The string containing the URL of the SQL Server Compact Server Agent (including its file name, Sqlcesa35.dll).</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeRemoteDataAccess.LocalConnectionString">
      <summary>[SECURITY CRITICAL] Specifies the connection string for the SQL Server Compact database.</summary>
      <returns>The connection string for the SQL Server Compact database.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeRemoteDataAccess.Pull(System.String,System.String,System.String)">
      <summary>[SECURITY CRITICAL] Downloads data from a remote SQL Server database and stores that data in a single table in a local SQL Server Compact database.</summary>
      <param name="localTableName">The name of the SQL Server Compact table that will receive the extracted SQL Server records. An error occurs if the table already exists. </param>
      <param name="sqlSelectString">Any valid Transact-SQL statement—including SELECT statements and stored procedures—that specifies which table, columns, and records to extract from the SQL Server database for storing in the SQL Server Compact database. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeRemoteDataAccess.Pull(System.String,System.String,System.String,System.Data.SqlServerCe.RdaTrackOption)">
      <summary>[SECURITY CRITICAL] Downloads data from a remote SQL Server database and stores that data in a single table in a local SQL Server Compact database.</summary>
      <param name="localTableName">The name of the SQL Server Compact table that will receive the extracted SQL Server records. An error occurs if the table already exists. </param>
      <param name="sqlSelectString">Any valid Transact-SQL statement—including SELECT statements and stored procedures—that specifies which table, columns, and records to extract from the SQL Server database for storing in the SQL Server Compact database. </param>
      <param name="trackOption">The option indicating whether SQL Server Compact tracks changes made to the pulled table, and whether the indexes that exist on the table being pulled are brought down to the device with the PRIMARY KEY constraints. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeRemoteDataAccess.Pull(System.String,System.String,System.String,System.Data.SqlServerCe.RdaTrackOption,System.String)">
      <summary>[SECURITY CRITICAL] Downloads data from a remote SQL Server database and stores that data in a single table in a local SQL Server Compact database.</summary>
      <param name="localTableName">The name of the SQL Server Compact table that will receive the extracted SQL Server records. An error occurs if the table already exists. </param>
      <param name="sqlSelectString">Any valid Transact-SQL statement—including SELECT statements and stored procedures—that specifies which table, columns, and records to extract from the SQL Server database for storing in the SQL Server Compact database. </param>
      <param name="trackOption">The option indicating whether SQL Server Compact tracks changes made to the pulled table, and whether the indexes that exist on the table being pulled are brought down to the device with the PRIMARY KEY constraints. </param>
      <param name="errorTable">The name of the local error table that is created if an error occurs when the <see cref="Overload:System.Data.SqlServerCe.SqlCeRemoteDataAccess.Push" /> method is later called to send changes back to SQL Server. This option can be specified only when the <paramref name="RdaTrackOption" /> value is <see cref="F:System.Data.SqlServerCe.RdaTrackOption.TrackingOn" /> or <see cref="F:System.Data.SqlServerCe.RdaTrackOption.TrackingOnWithIndexes" />. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeRemoteDataAccess.Push(System.String,System.String)">
      <summary>[SECURITY CRITICAL] Transmits changes from a pulled tracked table in SQL Server Compact back to the originating SQL Server table. These changes are individually applied to the server in separate transactions.</summary>
      <param name="localTableName">The name of the SQL Server Compact table that will receive the extracted SQL Server records. An error occurs if the table already exists. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeRemoteDataAccess.Push(System.String,System.String,System.Data.SqlServerCe.RdaBatchOption)">
      <summary>[SECURITY CRITICAL] Transmits changes from a pulled tracked table in SQL Server Compact back to the SQL Server table. These changes can be either individually applied to the server or batched together in a single transaction.</summary>
      <param name="localTableName">The name of the SQL Server Compact table that will receive the extracted SQL Server records. An error occurs if the table already exists. </param>
      <param name="batchOption">The option indicates whether the changes being sent back to the SQL Server table should be batched together in a single transaction or individually applied. </param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeRemoteDataAccess.ReceiveTimeout">
      <summary>[SECURITY CRITICAL] Gets or sets the amount of time, in milliseconds, that the <see cref="T:System.Data.SqlServerCe.SqlCeRemoteDataAccess" /> object waits for the response to a server request.</summary>
      <returns>An <see cref="T:System:Int32" /> value that represents the time-out, in milliseconds, with a default of 60 seconds.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeRemoteDataAccess.SendTimeout">
      <summary>[SECURITY CRITICAL] Gets or sets the amount of time, in milliseconds, that the <see cref="T:System.Data.SqlServerCe.SqlCeRemoteDataAccess" /> object waits to send a request to the server.</summary>
      <returns>An <see cref="T:System.Int32" /> value that represents the time-out, in milliseconds, with no default.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeRemoteDataAccess.SubmitSql(System.String,System.String)">
      <summary>[SECURITY CRITICAL] Submits SQL statements for execution on a database in SQL Server on a remote server.</summary>
      <param name="sqlString">Any SQL statement that does not return rows. </param>
      <param name="oleDBConnectionString">The OLE DB connection string for the remote SQL Server database. </param>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeReplication">
      <summary>[SECURITY CRITICAL] Initializes a new instance of the <see cref="T:System.Data.SqlServerCe.SqlCeReplication" /> object. For more information about SQL Server replication, see the SQL Server Books Online. For more information about merge replication with SQL Server Compact, see the SQL Server Compact Books Online.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeReplication.#ctor">
      <summary>[SECURITY CRITICAL] Initializes a new instance of the <see cref="T:System.Data.SqlServerCe.SqlCeReplication" /> object. This is the default constructor.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeReplication.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>[SECURITY CRITICAL] Initializes a new instance of the <see cref="T:System.Data.SqlServerCe.SqlCeReplication" /> object and sets the required properties for connecting to a publication.</summary>
      <param name="internetUrl">The URL used to connect to the SQL Server Compact Server Agent. </param>
      <param name="internetLogin">The login name used when connecting to the SQL Server Compact Server Agent. </param>
      <param name="internetPassword">The password used when connecting to the SQL Server Compact Server Agent. </param>
      <param name="publisher">The name of the Publisher. </param>
      <param name="publisherDatabase">The name of the publication database. </param>
      <param name="publication">The publication name that has been enabled for anonymous merge subscriptions. </param>
      <param name="subscriber">The name of the Subscriber. </param>
      <param name="subscriberConnectionString">The OLE DB connection string for the SQL Server Compact database on the Windows Mobile-based device. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeReplication.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>[SECURITY CRITICAL] Initializes a new instance of the <see cref="T:System.Data.SqlServerCe.SqlCeReplication" /> object and sets the properties for connecting to a publication.</summary>
      <param name="internetUrl">The URL used to connect to the SQL Server Compact Server Agent. </param>
      <param name="internetLogin">The login name used when connecting to the SQL Server Compact Server Agent. </param>
      <param name="internetPassword">The password used when connecting to the SQL Server Compact Server Agent. </param>
      <param name="publisher">The name of the Publisher. </param>
      <param name="publisherDatabase">The name of the publication database. </param>
      <param name="publisherLogin">The login name used when connecting to the Publisher. </param>
      <param name="publisherPassword">The login password used when connecting to the Publisher. </param>
      <param name="publication">The publication name that has been enabled for anonymous merge subscriptions. </param>
      <param name="subscriber">The name of the Subscriber. </param>
      <param name="subscriberConnectionString">The OLE DB connection string for the SQL Server Compact database on the Windows Mobile-based device. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeReplication.AddSubscription(System.Data.SqlServerCe.AddOption)">
      <summary>[SECURITY CRITICAL] Creates a new anonymous subscription to an existing SQL Server publication. After calling the <see cref="M:System.Data.SqlServerCe.SqlCeReplication.AddSubscription(System.Data.SqlServerCe.AddOption)" /> method, the application must call the <see cref="M:System.Data.SqlServerCe.SqlCeReplication.Synchronize" /> method to synchronize the new subscription to the publication based on the latest snapshot.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeReplication.BeginSynchronize(System.AsyncCallback,System.Data.SqlServerCe.OnStartTableUpload,System.Data.SqlServerCe.OnStartTableDownload,System.Data.SqlServerCe.OnSynchronization,System.Object)">
      <summary>[SECURITY CRITICAL] Starts an asynchronous data synchronization operation. When the synchronization ends, the <see cref="T:System.AsyncCallback" /> delegates are called. During the synchronization, synchronization status reports are sent to the SyncStatusReport delegates.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> interface for the asynchronous operation that has been started by calling this function. You can use this interface for testing for completion, or waiting until synchronization ends.</returns>
      <param name="onSyncCompletion">The <see cref="T:System.AsyncCallback" /> delegate that is implemented by the caller called at the end of synchronization.</param>
      <param name="onStartTableUpload">A user-defined delegate to the event that fires at the start of uploading table changes to the server.</param>
      <param name="onStartTableDownload">A user-defined delegate to the event that fires at the start of downloading table changes from the server.</param>
      <param name="onSynchronization">A user-defined delegate that consumes the ongoing synchronization events that are reported during the reconciler work.</param>
      <param name="state">A user-defined object that is returned by the <see cref="P:System.IAsyncResult.AsyncState" /> property.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeReplication.BeginSynchronize(System.AsyncCallback,System.Object)">
      <summary>[SECURITY CRITICAL] Starts an asynchronous data synchronization operation. When synchronization ends, the <see cref="T:System.AsyncCallback" /> delegates are called. During synchronization, no status reporting is performed.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> interface for the asynchronous operation that has been started by calling this function. You can use this interface for testing for completion, or waiting until synchronization ends.</returns>
      <param name="onSyncCompletion">The <see cref="T:System.IAsyncResult" /> delegates that are implemented by the caller and called at the end of synchronization.</param>
      <param name="state">A user-defined object that is returned by the <see cref="P:System.IAsyncResult.AsyncState" /> property.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeReplication.CancelSynchronize">
      <summary>[SECURITY CRITICAL] Cancels an ongoing asynchronous data synchronization that was started by calling the <see cref="Overload:System.Data.SqlServerCe.SqlCeReplication.BeginSynchronize" /> method. </summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.CompressionLevel">
      <summary>[SECURITY CRITICAL] Specifies the amount of compression that will be used by the compression routines during replication.</summary>
      <returns>The compression level.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.ConnectionManager">
      <summary>[SECURITY CRITICAL] Enables the Replication object to use the smart device's Connection Manager API to establish a network connection. The connection is released at the end of synchronization.</summary>
      <returns>true if the Connection Manager settings are used; otherwise, false.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.ConnectionRetryTimeout">
      <summary>[SECURITY CRITICAL] Specifies how long (in seconds) the SQL Server Compact client will continue to retry sending requests after an established connection has failed.</summary>
      <returns>The <see cref="P:System.Data.SqlServerCe.SqlCeReplication.ConnectionRetryTimeout" /> value, with a default value of 120 seconds.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.ConnectTimeout">
      <summary>[SECURITY CRITICAL] Gets or sets the amount of time, in milliseconds, that the <see cref="T:System.Data.SqlServerCe.SqlCeReplication" /> object waits for a connection to the server.</summary>
      <returns>An <see cref="T:System:Int32" /> value that represents the time-out, in milliseconds, with no default.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeReplication.Dispose">
      <summary>[SECURITY CRITICAL] Releases all native resources.</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.Distributor">
      <summary>[SECURITY CRITICAL] Specifies the SQL Server Distributor.</summary>
      <returns>The name of the Distributor used by the Publisher.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.DistributorAddress">
      <summary>[SECURITY CRITICAL] Specifies the network address used when the SQL Server Reconciler is connecting to the Distributor.</summary>
      <returns>The network address used when connecting to the Distributor.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.DistributorLogin">
      <summary>[SECURITY CRITICAL] Specifies the login name used when connecting to the Distributor.</summary>
      <returns>The login name used when connecting to the Distributor.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.DistributorNetwork">
      <summary>[SECURITY CRITICAL] Specifies the network protocol used when the SQL Server Reconciler communicates with the Distributor.</summary>
      <returns>The <see cref="T:System.Data.SqlServerCe.NetworkType" /> constant used by the SQL Server Reconciler to communicate with the Distributor.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.DistributorPassword">
      <summary>[SECURITY CRITICAL] Specifies the login password used when connecting to the Distributor.</summary>
      <returns>The password used when connecting to the Distributor.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.DistributorSecurityMode">
      <summary>[SECURITY CRITICAL] Specifies the security mode used when connecting to the Distributor.</summary>
      <returns>The <see cref="T:System.Data.SqlServerCe.SecurityType" /> constant that specifies the mode of security enforced at the Distributor.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeReplication.DropSubscription(System.Data.SqlServerCe.DropOption)">
      <summary>[SECURITY CRITICAL] Drops the subscription to a SQL Server publication and optionally deletes the SQL Server Compact database from the Windows Mobile-based device.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeReplication.EndSynchronize(System.IAsyncResult)">
      <summary>[SECURITY CRITICAL] Ends an asynchronous data synchronization that was started by a call to the <see cref="Overload:System.Data.SqlServerCe.SqlCeReplication.BeginSynchronize" /> method. </summary>
      <param name="ar">The <see cref="T:System.IAsyncResult" /> interface returned by the <see cref="Overload:System.Data.SqlServerCe.SqlCeReplication.BeginSynchronize" /> method.</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.ExchangeType">
      <summary>[SECURITY CRITICAL] Specifies whether the synchronization between the Publisher and the Subscriber is bi-directional or upload only.</summary>
      <returns>The <see cref="P:System.Data.SqlServerCe.SqlCeReplication.ExchangeType" /> constant that specifies whether data merges up to the Publisher only, or in both directions between the Publisher and the Subscriber.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.HostName">
      <summary>[SECURITY CRITICAL] Gets or sets the host name used for the device when connecting to the Publisher.</summary>
      <returns>The host name for the device. The default is no host name.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.InternetLogin">
      <summary>[SECURITY CRITICAL] Specifies the login name used when connecting to the SQL Server Compact Server Agent.</summary>
      <returns>The Internet Information Services (IIS) login name. The default is no login name.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.InternetPassword">
      <summary>[SECURITY CRITICAL] Specifies the password used when connecting to the SQL Server Compact Server Agent.</summary>
      <returns>The Internet Information Services (IIS) password string. The default is no password.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.InternetProxyLogin">
      <summary>[SECURITY CRITICAL] Specifies the login name used when connecting to an <see cref="P:System.Data.SqlServerCe.SqlCeReplication.InternetProxyServer" /> that requires authentication.</summary>
      <returns>The proxy server login name. The default is no login name.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.InternetProxyPassword">
      <summary>[SECURITY CRITICAL] Specifies the password used when connecting to an <see cref="P:System.Data.SqlServerCe.SqlCeReplication.InternetProxyServer" /> that requires authentication.</summary>
      <returns>The proxy server password string. The default is no password.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.InternetProxyServer">
      <summary>[SECURITY CRITICAL] Specifies the proxy server to use when accessing the HTTP resource specified in the <see cref="P:System.Data.SqlServerCe.SqlCeReplication.InternetUrl" /> property.</summary>
      <returns>The proxy server name (or IP address) and optionally the port number, in the following format: <paramref name="ProxyServerName" />:<paramref name="Port" /></returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.InternetUrl">
      <summary>[SECURITY CRITICAL] Specifies the URL used to connect to the SQL Server Compact Server Agent.</summary>
      <returns>The URL string.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeReplication.LoadProperties">
      <summary>[SECURITY CRITICAL] Retrieves all values stored for the synchronization properties, and then populates the <see cref="T:System.Data.SqlServerCe.SqlCeReplication" /> class properties with these saved values.</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.LoginTimeout">
      <summary>[SECURITY CRITICAL] Specifies the maximum number of seconds to wait for connections to be established. This property affects the connection time between the computer running Internet Information Services (IIS) and the Publisher or Distributor. It does not control the connection time between the smart device and IIS.</summary>
      <returns>The number of seconds for connections to be established. The default is 15 seconds.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.PostSyncCleanup">
      <summary>[SECURITY CRITICAL] Gets or sets a value that selectively enables or disables the types of post sync cleanup operations that are performed.</summary>
      <returns>A value that specifies which post sync cleanup operations to perform. The Update Statistics operation (UpdateStats) and the Clean by Retention operation (CleanByRetention) can be selectively enabled or disabled. See the Remarks section for details.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.ProfileName">
      <summary>[SECURITY CRITICAL] Specifies the name of the agent profile at the Distributor to be used by the <see cref="T:System.Data.SqlServerCe.SqlCeReplication" /> object.</summary>
      <returns>The agent profile name.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.Publication">
      <summary>[SECURITY CRITICAL] Specifies the SQL Server publication name that has been enabled for SQL Server Compact subscribers.</summary>
      <returns>The name of the Publication.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.Publisher">
      <summary>[SECURITY CRITICAL] Specifies the name of the SQL Server Publisher. The Publisher is the computer that is running SQL Server and that contains the publication.</summary>
      <returns>The name of the Publisher.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.PublisherAddress">
      <summary>[SECURITY CRITICAL] Specifies the network address used when connecting to the Publisher.</summary>
      <returns>The network address used when connecting to the Publisher.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.PublisherChanges">
      <summary>[SECURITY CRITICAL] Specifies the total number of Publisher changes applied at the Subscriber when the <see cref="M:System.Data.SqlServerCe.SqlCeReplication.Synchronize" /> method was last called.</summary>
      <returns>The total number of Publisher rows that were inserted, updated, and deleted.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.PublisherConflicts">
      <summary>[SECURITY CRITICAL] Specifies the total number of conflicts that occurred at the Publisher when the <see cref="M:System.Data.SqlServerCe.SqlCeReplication.Synchronize" /> method was last called.</summary>
      <returns>The number of conflicts that occurred.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.PublisherDatabase">
      <summary>[SECURITY CRITICAL] Specifies the name of the publication database.</summary>
      <returns>The name of the publication database.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.PublisherLogin">
      <summary>[SECURITY CRITICAL] Specifies the login name used when connecting to the Publisher.</summary>
      <returns>The Publisher login name.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.PublisherNetwork">
      <summary>[SECURITY CRITICAL] Specifies the network protocol used when the SQL Server Replication Provider communicates with the Publisher.</summary>
      <returns>The <see cref="T:System.Data.SqlServerCe.NetworkType" /> constant that specifies the network protocol used.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.PublisherPassword">
      <summary>[SECURITY CRITICAL] Specifies the login password used when connecting to the Publisher.</summary>
      <returns>The login password. The default is no password (empty string).</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.PublisherSecurityMode">
      <summary>[SECURITY CRITICAL] Specifies the security mode used when connecting to the Publisher.</summary>
      <returns>The <see cref="T:System.Data.SqlServerCe.SecurityType" /> constant that specifies the security mode.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.QueryTimeout">
      <summary>[SECURITY CRITICAL] Specifies the number of seconds allowed for internal queries to complete.</summary>
      <returns>The number of seconds allowed for internal queries to be returned. The default is 300 seconds.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.ReceiveTimeout">
      <summary>[SECURITY CRITICAL] Gets or sets the amount of time, in milliseconds, that the <see cref="T:System.Data.SqlServerCe.SqlCeReplication" /> object waits for the response to a server request.</summary>
      <returns>An <see cref="T:System:Int32" /> value that represents the time-out, in milliseconds, with a default of 60 seconds.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeReplication.ReinitializeSubscription(System.Boolean)">
      <summary>[SECURITY CRITICAL] Marks a subscription for reinitialization. After calling this method, an application must call the <see cref="M:System.Data.SqlServerCe.SqlCeReplication.Synchronize" /> method to download the latest snapshot of the publication to the device.</summary>
      <param name="uploadBeforeReinitialize">If True, the changes in the subscription database are uploaded to the Publisher before the snapshot is applied at the Subscriber. The default is False. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeReplication.SaveProperties">
      <summary>[SECURITY CRITICAL] Retrieves all of the values stored in the <see cref="T:System.Data.SqlServerCe.SqlCeReplication" /> class properties for the current subscription and stores them in a system table.</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.SendTimeout">
      <summary>[SECURITY CRITICAL] Gets or sets the amount of time, in milliseconds, that the <see cref="T:System.Data.SqlServerCe.SqlCeReplication" /> object waits to send a request to the server.</summary>
      <returns>An <see cref="T:System.Int32" /> value that represents the time-out, in milliseconds, with no default.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.SnapshotTransferType">
      <summary>[SECURITY CRITICAL] Controls how snapshot files are transferred from the Distributor to the computer running IIS. Snapshot files can be transferred using either the HTTP or the FTP protocol.</summary>
      <returns>The <see cref="P:System.Data.SqlServerCe.SqlCeReplication.SnapshotTransferType" /> value.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.Subscriber">
      <summary>[SECURITY CRITICAL] Specifies the name of the Subscriber.</summary>
      <returns>The Subscriber name.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.SubscriberChanges">
      <summary>[SECURITY CRITICAL] Specifies the total number of Subscriber changes applied at the Publisher when the <see cref="M:System.Data.SqlServerCe.SqlCeReplication.Synchronize" /> method was last called.</summary>
      <returns>The total number of Subscriber rows that were inserted, updated, and deleted.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.SubscriberConflicts">
      <summary>[SECURITY CRITICAL] This property is not used by SQL Server Compact.</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.SubscriberConnectionString">
      <summary>[SECURITY CRITICAL] Specifies the connection string to the SQL Server Compact database.</summary>
      <returns>The connection string to the SQL Server Compact database.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeReplication.Synchronize">
      <summary>[SECURITY CRITICAL] Invokes merge replication between the SQL Server Compact subscription and the SQL Server Publisher.</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.Validate">
      <summary>[SECURITY CRITICAL] Specifies the type of data validation SQL Server Compact replication performs while synchronizing.</summary>
      <returns>The <see cref="T:System.Data.SqlServerCe.ValidateType" /> constant that specifies the type of data validation to perform.</returns>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeResultSet">
      <summary>An updateable, scrollable, and bindable cursor.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.#ctor">
      <summary>[SECURITY CRITICAL] Do not use. To create a <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" />, you must call the <see cref="M:System.Data.Sql.ISqlExecutionContext.ExecuteResultSet(System.Data.ResultSetOptions)" /> method of the <see cref="T:System.Data.SqlServerCe.SqlCeCommand" />.</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeResultSet.ContainsListCollection"></member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.CreateRecord">
      <summary>Creates a new row on the server and returns a <see cref="T:System.Data.SqlServerCe.SqlCeUpdatableRecord" /> object.</summary>
      <returns>A SqlCeUpdatableRecord with the metadata of the <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" /> pre-populated.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.Delete">
      <summary>Deletes the current record from the data source on the server.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetBoolean(System.Int32)">
      <summary>Returns the value of the column at the specified index as a Boolean value.</summary>
      <returns>The value of the column at the specified index.</returns>
      <param name="ordinal">The ordinal position of the column from which to retrieve data.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetByte(System.Int32)">
      <summary>Returns the value of the column at the specified index as a byte.</summary>
      <returns>The value of the column at the specified index.</returns>
      <param name="ordinal">The ordinal position of the column from which to retrieve data.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Copies a length of bytes into the buffer, starting at a specified position in the specified field. </summary>
      <returns>The actual number of bytes copied to the buffer.</returns>
      <param name="ordinal">The ordinal position of the column from which retrieve data.  </param>
      <param name="dataIndex">The offset (in bytes) within the field from which to start copying data.</param>
      <param name="buffer">The buffer into which to copy the data.</param>
      <param name="bufferIndex">The offset within the buffer from which to start the copy.</param>
      <param name="length">The maximum number of bytes to copy.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Copies a length of chars into the buffer, starting at a specified position in the specified field. </summary>
      <returns>The actual number of chars copied.</returns>
      <param name="ordinal">The ordinal position of the field from which to retrieve data.</param>
      <param name="dataIndex">The offset (in chars) within the field from which to start copying.</param>
      <param name="buffer">The buffer into which to copy the data.</param>
      <param name="bufferIndex">The offset within the buffer from which to start the copy.</param>
      <param name="length">The maximum number of bytes to copy.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetDateTime(System.Int32)">
      <summary>Returns the value of the column at the specified index as a DateTime.</summary>
      <returns>The value of the column at the specified index.</returns>
      <param name="ordinal">The ordinal position of the column from which to retrieve data.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetDecimal(System.Int32)">
      <summary>Returns the value of the column at the specified index as a Double.</summary>
      <returns>The value of the column at the specified index.</returns>
      <param name="ordinal">The ordinal position of the column from which to retrieve data.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetDouble(System.Int32)">
      <summary>Returns the value of the column at the specified index as a Double.</summary>
      <returns>The value of the column at the specified index.</returns>
      <param name="ordinal">The ordinal position of the column from which to retrieve data.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetEnumerator">
      <summary>Returns a <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the rows in the data reader.</summary>
      <returns>A <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetFloat(System.Int32)">
      <summary>Returns the value of the column at the specified index as a Float.</summary>
      <returns>The value of the column at the specified index.</returns>
      <param name="ordinal">The ordinal position of the column from which to retrieve data.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetGuid(System.Int32)">
      <summary>Returns the value of the column at the specified index as a GUID.</summary>
      <returns>The value of the column at the specified index.</returns>
      <param name="ordinal">The ordinal position of the column from which to retrieve data.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetInt16(System.Int32)">
      <summary>Returns the value of the column at the specified index as an Int16.</summary>
      <returns>The value of the column at the specified index.</returns>
      <param name="ordinal">The ordinal position of the column from which to retrieve data.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetInt32(System.Int32)">
      <summary>Returns the value of the column at the specified index as an Int32.</summary>
      <returns>The value of the column at the specified index.</returns>
      <param name="ordinal">TBD</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetInt64(System.Int32)">
      <summary>Returns the value of the column at the specified index as an Int64.</summary>
      <returns>The value of the column at the specified index.</returns>
      <param name="ordinal">The ordinal position of the column from which to retrieve data.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetList">
      <summary>Returns an instance of <see cref="T:System.Data.SqlServerCe.ResultSetView" />.</summary>
      <returns>A <see cref="T:System.Data.SqlServerCe.ResultSetView" /> object.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetSqlBinary(System.Int32)">
      <summary>Returns the value of the column at the specified index as type SqlBinary.</summary>
      <returns>The value of the column at the specified index.</returns>
      <param name="ordinal">The ordinal position of the column from which to retrieve data.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetSqlBoolean(System.Int32)">
      <summary>Returns the value of the column at the specified index as type SqlBoolean.</summary>
      <returns>The value of the column at the specified index.</returns>
      <param name="ordinal">The ordinal position of the column from which to retrieve data.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetSqlByte(System.Int32)">
      <summary>Returns the value of the column at the specified index as type SqlByte.</summary>
      <returns>The value of the column at the specified index.</returns>
      <param name="ordinal">The ordinal position of the column from which to retrieve data.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetSqlDateTime(System.Int32)">
      <summary>Returns the value of the column at the specified index as type SqlDateTime.</summary>
      <returns>The value of the column at the specified index.</returns>
      <param name="ordinal">The ordinal position of the column from which to retrieve data.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetSqlDecimal(System.Int32)">
      <summary>Returns the value of the column at the specified index as type SqlDecimal.</summary>
      <returns>The value of the column at the specified index.</returns>
      <param name="ordinal">The ordinal position of the column from which to retrieve data.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetSqlDouble(System.Int32)">
      <summary>Returns the value of the column at the specified index as type SqlDouble.</summary>
      <returns>The value of the column at the specified index.</returns>
      <param name="ordinal">The ordinal position of the column from which to retrieve data.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetSqlGuid(System.Int32)">
      <summary>Returns the value of the column at the specified index as type SqlGuid.</summary>
      <returns>The value of the column at the specified index.</returns>
      <param name="ordinal">The ordinal position of the column from which to retrieve data.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetSqlInt16(System.Int32)">
      <summary>Returns the value of the column at the specified index as type SqlInt16.</summary>
      <returns>The value of the column at the specified index.</returns>
      <param name="ordinal">The ordinal position of the column from which to retrieve data.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetSqlInt32(System.Int32)">
      <summary>Returns the value of the column at the specified index as type SqlInt32.</summary>
      <returns>The value of the column at the specified index.</returns>
      <param name="ordinal">The ordinal position of the column from which to retrieve data.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetSqlInt64(System.Int32)">
      <summary>Returns the value of the column at the specified index as type SqlInt64.</summary>
      <returns>The value of the column at the specified index.</returns>
      <param name="ordinal">The ordinal position of the column from which to retrieve data.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetSqlMetaData(System.Int32)">
      <summary>Returns the metadata information associated with the specified column.</summary>
      <returns>The metadata of the column at the specified index.</returns>
      <param name="ordinal">The ordinal position of the column from which to retrieve data.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetSqlMoney(System.Int32)">
      <summary>Returns the value of the column at the specified index as type SqlMoney.</summary>
      <returns>The value of the column at the specified index.</returns>
      <param name="ordinal">The ordinal position of the column from which to retrieve data.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetSqlSingle(System.Int32)">
      <summary>Returns the value of the column at the specified index as type SqlSingle.</summary>
      <returns>The value of the column at the specified index.</returns>
      <param name="ordinal">The ordinal position of the column from which to retrieve data.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetSqlString(System.Int32)">
      <summary>Returns the value of the column at the specified index as type SqlString.</summary>
      <returns>The value of the column at the specified index.</returns>
      <param name="ordinal">The ordinal position of the column from which to retrieve data.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetString(System.Int32)">
      <summary>Returns the value of the column at the specified index as type String.</summary>
      <returns>The value of the column at the specified index.</returns>
      <param name="ordinal">The ordinal position of the column from which to retrieve data.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetValue(System.Int32)">
      <summary>Returns the value of the specified field.</summary>
      <returns>The object that contains the value of the specified field.</returns>
      <param name="ordinal">The ordinal position of the column from which to retrieve the value.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetValues(System.Object[])">
      <summary>Retrieves an array of all of the fields for the specified record.</summary>
      <returns>The number of instances in the array.</returns>
      <param name="values">The array of type Object in which to store the values as they are returned.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.Insert(System.Data.SqlServerCe.SqlCeUpdatableRecord)">
      <summary>Inserts the specified <see cref="T:System.Data.SqlServerCe.SqlCeUpdatableRecord" /> into the underlying rowset.</summary>
      <param name="record">The record to insert.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.Insert(System.Data.SqlServerCe.SqlCeUpdatableRecord,System.Data.SqlServerCe.DbInsertOptions)">
      <summary>Inserts the specified <see cref="T:System.Data.SqlServerCe.SqlCeUpdatableRecord" /> into the underlying rowset and specifies how the cursor is positioned.</summary>
      <param name="record">The record to insert.</param>
      <param name="options">The <see cref="T:System.Data.SqlServerCe.DbInsertOptions" /> option to specify how the cursor is positioned after the insert.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.IsDBNull(System.Int32)">
      <summary>Determines if the field at the specified ordinal position is null.</summary>
      <returns>True if the specified field is null; otherwise, false.</returns>
      <param name="ordinal">The ordinal position of the column from which to retrieve the value.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.IsSetAsDefault(System.Int32)">
      <summary>Determines if the field at the specified ordinal position is marked to use the underlying default value.</summary>
      <returns>True if the specified field is marked to use the underlying default value; otherwise, false.</returns>
      <param name="ordinal">The ordinal position of the column from which to retrieve the value.</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeResultSet.Item(System.Int32)">
      <summary>Serves as an indexer for the <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" />.</summary>
      <returns>The record at the specified index.</returns>
      <param name="index">The position of the item in the ResultSet.</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeResultSet.Item(System.String)">
      <summary>Serves as an indexer for the <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" />.</summary>
      <returns>The record that matches the specified name.</returns>
      <param name="name">The name of the record in the ResultSet.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.OnMove"></member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.ReadAbsolute(System.Int32)">
      <summary>Moves the reader to a specific record in the ResultSet.</summary>
      <returns>True if the operation succeeded; otherwise, false.</returns>
      <param name="position">The position to which to move the reader.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.ReadFirst">
      <summary>Positions the reader at the first record in the ResultSet.</summary>
      <returns>True if the operation succeeded; otherwise, false.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.ReadLast">
      <summary>Positions the reader at the last record in the ResultSet.</summary>
      <returns>True if the operation succeeded; otherwise, false.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.ReadPrevious">
      <summary>Positions the reader at the record pervious to the current record.</summary>
      <returns>True if the operation succeeded; otherwise, false.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.ReadRelative(System.Int32)">
      <summary>Moves the reader the specified amount from the current position.</summary>
      <returns>True if the operation succeeded; otherwise, false.</returns>
      <param name="position">The number of positions to move the reader.</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeResultSet.ResultSetView">
      <summary>Used when data binding a <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" /> to a control.</summary>
      <returns>A <see cref="T:System.Data.SqlServerCe.ResultSetView" />.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeResultSet.Scrollable">
      <summary>Determines whether the <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" /> is scrollable.</summary>
      <returns>True if the <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" /> is scrollable; otherwise, false.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeResultSet.Sensitivity">
      <summary>Determines the sensitivity of the <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" />.</summary>
      <returns>The <see cref="T:System.Data.SqlServerCe.ResultSetSensitivity" /> for the <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" />.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetBoolean(System.Int32,System.Boolean)">
      <summary>Sets the value of the specified column to the passed-in Boolean value.</summary>
      <param name="ordinal">The ordinal position of the column to set.</param>
      <param name="value">The value to assign to the specified column.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetByte(System.Int32,System.Byte)">
      <summary>Sets the value of the specified column to the passed-in Byte value.</summary>
      <param name="ordinal">The ordinal position of the column to set.</param>
      <param name="value">The value to assign to the specified column.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Copies a length of bytes from the specified buffer to the specified column, starting at the specified location within that field.</summary>
      <param name="ordinal">The ordinal position of the column to set.</param>
      <param name="dataIndex">The location within the column to which to begin copying the data.</param>
      <param name="buffer">The buffer that contains the data to copy.</param>
      <param name="bufferIndex">The offset within the buffer from which to copy the data.</param>
      <param name="length">The maximum number of bytes to copy.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetChar(System.Int32,System.Char)">
      <summary>Sets the value of the specified column to the passed-in Char value.</summary>
      <param name="ordinal">The ordinal position of the column to set.</param>
      <param name="c">The value to assign to the specified column.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Copies a length of chars from the specified buffer to the specified column, starting at the specified location within that field.</summary>
      <param name="ordinal">The ordinal position of the column to set.</param>
      <param name="dataIndex">The location within the column to which to begin copying the data.</param>
      <param name="buffer">The buffer that contains the data to copy.</param>
      <param name="bufferIndex">The offset within the buffer from which to copy the data.</param>
      <param name="length">The maximum number of bytes to copy.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetDateTime(System.Int32,System.DateTime)">
      <summary>Sets the value of the specified column to the passed-in DateTime value.</summary>
      <param name="ordinal">The ordinal position of the column to set.</param>
      <param name="value">The value to assign to the specified column.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetDecimal(System.Int32,System.Decimal)">
      <summary>Sets the value of the specified column to the passed-in Decimal value.</summary>
      <param name="ordinal">The ordinal position of the column to set.</param>
      <param name="value">The value to assign to the specified column.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetDefault(System.Int32)">
      <summary>Sets the specified column to its default value.</summary>
      <param name="ordinal">The ordinal position of the column to set.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetDouble(System.Int32,System.Double)">
      <summary>Sets the value of the specified column to the passed-in Double value.</summary>
      <param name="ordinal">The ordinal position of the column to set.</param>
      <param name="value">The value to assign to the specified column.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetFloat(System.Int32,System.Single)">
      <summary>Sets the value of the specified column to the passed-in Float value.</summary>
      <param name="ordinal">The ordinal position of the column to set.</param>
      <param name="value">The value to assign to the specified column.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetGuid(System.Int32,System.Guid)">
      <summary>Sets the value of the specified column to the passed-in Guid value.</summary>
      <param name="ordinal">The ordinal position of the column to set.</param>
      <param name="value">The value to assign to the specified column.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetInt16(System.Int32,System.Int16)">
      <summary>Sets the value of the specified column to the passed-in Int16 value.</summary>
      <param name="ordinal">The ordinal position of the column to set.</param>
      <param name="value">The value to assign to the specified column.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetInt32(System.Int32,System.Int32)">
      <summary>Sets the value of the specified column to the passed-in Int32 value.</summary>
      <param name="ordinal">The ordinal position of the column to set.</param>
      <param name="value">The value to assign to the specified column.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetInt64(System.Int32,System.Int64)">
      <summary>Sets the value of the specified column to the passed-in Int64 value.</summary>
      <param name="ordinal">The ordinal position of the column to set.</param>
      <param name="value">The value to assign to the specified column.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetObjectRef(System.Int32,System.Object)">
      <summary>Binds an object to the column at the specified position.</summary>
      <param name="ordinal">The ordinal position of the column to set.</param>
      <param name="buffer">The value to assign to the specified column.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetSqlBinary(System.Int32,System.Data.SqlTypes.SqlBinary)">
      <summary>Sets the value of the specified column to the passed-in SqlBinary value.</summary>
      <param name="ordinal">The ordinal position of the column to set.</param>
      <param name="value">The value to assign to the specified column.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetSqlBoolean(System.Int32,System.Data.SqlTypes.SqlBoolean)">
      <summary>Sets the value of the specified column to the passed-in SqlBoolean value.</summary>
      <param name="ordinal">The ordinal position of the column to set.</param>
      <param name="value">The value to assign to the specified column.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetSqlByte(System.Int32,System.Data.SqlTypes.SqlByte)">
      <summary>Sets the value of the specified column to the passed-in SqlByte value.</summary>
      <param name="ordinal">The ordinal position of the column to set.</param>
      <param name="value">The value to assign to the specified column.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetSqlDateTime(System.Int32,System.Data.SqlTypes.SqlDateTime)">
      <summary>Sets the value of the specified column to the passed-in SqlDateTime value.</summary>
      <param name="ordinal">The ordinal position of the column to set.</param>
      <param name="value">The value to assign to the specified column.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetSqlDecimal(System.Int32,System.Data.SqlTypes.SqlDecimal)">
      <summary>Sets the value of the specified column to the passed-in SqlDecimal value.</summary>
      <param name="ordinal">The ordinal position of the column to set.</param>
      <param name="value">The value to assign to the specified column.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetSqlDouble(System.Int32,System.Data.SqlTypes.SqlDouble)">
      <summary>Sets the value of the specified column to the passed-in SqlDouble value.</summary>
      <param name="ordinal">The ordinal position of the column to set.</param>
      <param name="value">The value to assign to the specified column.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetSqlGuid(System.Int32,System.Data.SqlTypes.SqlGuid)">
      <summary>Sets the value of the specified column to the passed-in SqlGuid value.</summary>
      <param name="ordinal">The ordinal position of the column to set.</param>
      <param name="value">The value to assign to the specified column.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetSqlInt16(System.Int32,System.Data.SqlTypes.SqlInt16)">
      <summary>Sets the value of the specified column to the passed-in SqlInt16 value.</summary>
      <param name="ordinal">The ordinal position of the column to set.</param>
      <param name="value">The value to assign to the specified column.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetSqlInt32(System.Int32,System.Data.SqlTypes.SqlInt32)">
      <summary>Sets the value of the specified column to the passed-in SqlInt32 value.</summary>
      <param name="ordinal">The ordinal position of the column to set.</param>
      <param name="value">The value to assign to the specified column.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetSqlInt64(System.Int32,System.Data.SqlTypes.SqlInt64)">
      <summary>Sets the value of the specified column to the passed-in SqlInt64 value.</summary>
      <param name="ordinal">The ordinal position of the column to set.</param>
      <param name="value">The value to assign to the specified column.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetSqlMoney(System.Int32,System.Data.SqlTypes.SqlMoney)">
      <summary>Sets the value of the specified column to the passed-in SqlMoney value.</summary>
      <param name="ordinal">The ordinal position of the column to set.</param>
      <param name="value">The value to assign to the specified column.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetSqlSingle(System.Int32,System.Data.SqlTypes.SqlSingle)">
      <summary>Sets the value of the specified column to the passed-in SqlSingle value.</summary>
      <param name="ordinal">The ordinal position of the column to set.</param>
      <param name="value">The value to assign to the specified column.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetSqlString(System.Int32,System.Data.SqlTypes.SqlString)">
      <summary>Sets the value of the specified column to the passed-in SqlString value.</summary>
      <param name="ordinal">The ordinal position of the column to set.</param>
      <param name="value">The value to assign to the specified column.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetString(System.Int32,System.String)">
      <summary>Sets the value of the specified column to the passed-in String value.</summary>
      <param name="ordinal">The ordinal position of the column to set.</param>
      <param name="value">The value to assign to the specified column.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetValue(System.Int32,System.Object)">
      <summary>Sets the value of the specified column to the passed-in value.</summary>
      <param name="ordinal">The ordinal position of the column to set.</param>
      <param name="value">The value to assign to the specified column.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetValues(System.Object[])">
      <summary>Sets each of the fields in the specified record to the corresponding value in the specified array.</summary>
      <returns>The number of values copied from the array.</returns>
      <param name="values">The array that contains the values to set.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.System#Collections#IEnumerable#GetEnumerator"></member>
    <member name="P:System.Data.SqlServerCe.SqlCeResultSet.System#ComponentModel#IListSource#ContainsListCollection"></member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.System#ComponentModel#IListSource#GetList"></member>
    <member name="P:System.Data.SqlServerCe.SqlCeResultSet.Updatable">
      <summary>Determines whether values within the <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" /> can be modified.</summary>
      <returns>True if the values in the record can be modified; otherwise, false;</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.Update">
      <summary>Sends changes from the current record to the underlying row on the server.</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeRowUpdatedEventArgs">
      <summary>Provides data for the <see cref="E:System.Data.SqlServerCe.SqlCeDataAdapter.RowUpdated" /> event. </summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeRowUpdatedEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.SqlServerCe.SqlCeRowUpdatedEventArgs" /> class.</summary>
      <param name="dataRow">The <see cref="T:System.Data.DataRow" /> sent through an <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />. </param>
      <param name="command">The <see cref="T:System.Data.IDbCommand" /> executed when <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> is called. </param>
      <param name="statementType">One of the <see cref="T:System.Data.StatementType" /> values that specifies the type of query executed. </param>
      <param name="tableMapping">The <see cref="T:System.Data.Common.DataTableMapping" /> sent through an <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />. </param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeRowUpdatedEventArgs.Command">
      <summary>Gets the <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> executed when <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> is called.</summary>
      <returns>The <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> executed when <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> is called.</returns>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeRowUpdatedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Data.SqlServerCe.SqlCeDataAdapter.RowUpdated" /> event of a <see cref="T:System.Data.SqlServerCe.SqlCeDataAdapter" />.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">The <see cref="T:System.Data.SqlServerCe.SqlCeRowUpdatedEventArgs" /> that contains the event data. </param>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeRowUpdatingEventArgs">
      <summary>Provides data for the <see cref="E:System.Data.SqlServerCe.SqlCeDataAdapter.RowUpdating" /> event.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeRowUpdatingEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.SqlServerCe.SqlCeRowUpdatingEventArgs" /> class.</summary>
      <param name="dataRow">The <see cref="T:System.Data.DataRow" /> to <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />. </param>
      <param name="command">The <see cref="T:System.Data.IDbCommand" /> to execute during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />. </param>
      <param name="statementType">One of the <see cref="T:System.Data.StatementType" /> values that specifies the type of query executed. </param>
      <param name="tableMapping">The <see cref="T:System.Data.Common.DataTableMapping" /> sent through an <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />. </param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeRowUpdatingEventArgs.Command">
      <summary>Gets or sets the <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> to execute when performing an <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns>The <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> to execute when performing the <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeRowUpdatingEventHandler">
      <summary>Represents the method that handles the <see cref="E:System.Data.SqlServerCe.SqlCeDataAdapter.RowUpdating" /> event of a <see cref="T:System.Data.SqlServerCe.SqlCeDataAdapter" />.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">The <see cref="T:System.Data.SqlServerCe.SqlCeRowUpdatingEventArgs" /> that contains the event data. </param>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeTransaction">
      <summary>Represents an SQL transaction to be made at a data source. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeTransaction.Commit">
      <summary>Commits the database transaction.</summary>
      <exception cref="T:System.Exception">An error occurred while trying to commit the transaction. </exception>
      <exception cref="T:System.InvalidOperationException">The transaction has already been committed or rolled back.-or- The connection is broken. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeTransaction.Commit(System.Data.SqlServerCe.CommitMode)">
      <summary>Commits the database transaction using the specified <see cref="T:System.Data.SqlServerCe.CommitMode" />.</summary>
      <exception cref="T:System.Exception">An error occurred while trying to commit the transaction. </exception>
      <exception cref="T:System.InvalidOperationException">The transaction has already been committed or rolled back.-or- The connection is broken. </exception>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeTransaction.CurrentTransactionBsn">
      <summary>Gets the begin sequence number (BSN) for the transaction.</summary>
      <returns>The BSN for the transaction.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeTransaction.Dispose">
      <summary>Releases all <see cref="T:System.Data.SqlServerCe.SqlCeConnection" /> objects associated with the transaction.</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeTransaction.IsolationLevel">
      <summary>Specifies the <see cref="T:System.Data.IsolationLevel" /> for this transaction.</summary>
      <returns>The <see cref="T:System.Data.IsolationLevel" /> for this transaction. The .NET Compact Framework Data Provider for SQL Server Compact supports the ReadCommitted, Serializable, and ReadRepeatable isolation levels.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeTransaction.Rollback">
      <summary>Rolls back a transaction from a pending state.</summary>
      <exception cref="T:System.Exception">An error occurred while trying to commit the transaction. </exception>
      <exception cref="T:System.InvalidOperationException">The transaction has already been committed or rolled back.-or- The connection is broken. </exception>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeTransaction.TrackingContext">
      <summary>Gets or sets application-specific context information that is associated by the transaction with tracked operations on a SQL Server Compact database table.</summary>
      <returns>A value that represents application-specific information.</returns>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeTransactionInProgressException">
      <summary> The exception thrown when the underlying provider returns an error from a  Microsoft SQL Server Compact data source when an operation is attempted while a transaction is in progress. </summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeTransactionInProgressException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Constructor that helps in serialization.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeTransactionInProgressException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>[SECURITY CRITICAL]  Populates a SerializationInfo with the data needed to serialize the  object. </summary>
      <param name="info">The serialization information.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeType"></member>
    <member name="P:System.Data.SqlServerCe.SqlCeType.SqlDbType"></member>
    <member name="M:System.Data.SqlServerCe.SqlCeType.ToString"></member>
    <member name="T:System.Data.SqlServerCe.SqlCeUpdatableRecord">
      <summary>Represents a row of updatable values from the data source. A <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" /> object contains one or more UpdatableRecords.</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeUpdatableRecord.FieldCount">
      <summary>Returns the number of fields in the specified record.</summary>
      <returns>The number of fields in the record.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetBoolean(System.Int32)">
      <summary>Returns the value of the specified field as bool.</summary>
      <param name="ordinal">The field from which to retrieve a value.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetByte(System.Int32)">
      <summary>Returns the value of the specified field as byte.</summary>
      <param name="ordinal">The field from which to retrieve a value.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Copies a length of bytes into the buffer, starting at a specified position in the specified field. </summary>
      <param name="ordinal">The ordinal position of the column from which to retrieve data.  </param>
      <param name="dataIndex">The offset (in bytes) within the field from which to start copying data.</param>
      <param name="buffer">The buffer into which to copy the data.</param>
      <param name="bufferIndex">The offset within the buffer from which to start the copy.</param>
      <param name="length">The maximum number of bytes to copy.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetChar(System.Int32)">
      <summary>Returns the value of the specified field as char.</summary>
      <param name="ordinal">The field from which to retrieve a value.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Copies a length of chars into the buffer, starting at a specified position in the specified field. </summary>
      <param name="ordinal">The ordinal position of the field from which to retrieve data.</param>
      <param name="dataIndex">The offset (in chars) within the field from which to start copying.</param>
      <param name="buffer">The buffer into which to copy the data.</param>
      <param name="bufferIndex">The offset within the buffer from which to start the copy.</param>
      <param name="length">The maximum number of bytes to copy.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetData(System.Int32)">
      <summary>Returns a <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> positioned on the current record.</summary>
      <param name="ordinal">The field from which to retrieve a value.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetDataTypeName(System.Int32)">
      <summary>Returns the datatype name for the specified field.</summary>
      <param name="ordinal">The field from which to retrieve a value.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetDateTime(System.Int32)">
      <summary>Returns the value of the specified field as DateTime.</summary>
      <param name="ordinal">The field from which to retrieve a value.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetDecimal(System.Int32)">
      <summary>Returns the value of the specified field as decimal.</summary>
      <param name="ordinal">The field from which to retrieve a value.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetDouble(System.Int32)">
      <summary>Returns the value of the specified field as double.</summary>
      <param name="ordinal">The field from which to retrieve a value.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetFieldType(System.Int32)">
      <summary>Returns the CLR datatype for the specified field.</summary>
      <returns>The CLR datatype for the field.</returns>
      <param name="ordinal">The field from which to retrieve a value.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetFloat(System.Int32)">
      <summary>Returns the value of the specified field as float.</summary>
      <param name="ordinal">The field from which to retrieve a value.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetGuid(System.Int32)">
      <summary>Returns the value of the specified field as a GUID.</summary>
      <param name="ordinal">The field from which to retrieve a value.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetInt16(System.Int32)">
      <summary>Returns the value of the specified field as int16.</summary>
      <param name="ordinal">The field from which to retrieve a value.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetInt32(System.Int32)">
      <summary>Returns the value of the specified field as int32.</summary>
      <param name="ordinal">The field from which to retrieve a value.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetInt64(System.Int32)">
      <summary>Returns the value of the specified field as int64.</summary>
      <param name="ordinal">The field from which to retrieve a value.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetName(System.Int32)">
      <summary>Returns the name of the specified field.</summary>
      <param name="ordinal">The field from which to retrieve a value.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetOrdinal(System.String)">
      <summary>Returns the ordinal for the field specified in the passed-in name.</summary>
      <param name="name">The name of the field from which to determine the ordinal.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetSqlBinary(System.Int32)">
      <summary>Returns the value of the specified field as SqlBinary.</summary>
      <param name="ordinal">The field from which to retrieve a value.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetSqlBoolean(System.Int32)">
      <summary>Returns the value of the specified field as SqlBoolean.</summary>
      <param name="ordinal">The field from which to retrieve a value.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetSqlByte(System.Int32)">
      <summary>Returns the value of the specified field as SqlByte.</summary>
      <param name="ordinal">The field from which to retrieve a value.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetSqlBytesRef(System.Int32)">
      <summary>Returns a reference to the SqlBytes instance that contains the value of the specified field.</summary>
      <returns>A reference to a SqlBytes instance.</returns>
      <param name="ordinal">The field from which to retrieve a value.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetSqlCharsRef(System.Int32)">
      <summary>Returns a reference to the SqlChars instance that contains the value of the specified field.</summary>
      <returns>A reference to a SqlChars instance.</returns>
      <param name="ordinal">The field from which to retrieve a value.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetSqlDateTime(System.Int32)">
      <summary>Returns the value of the specified field as SqlDateTime.</summary>
      <param name="ordinal">The field from which to retrieve a value.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetSqlDecimal(System.Int32)">
      <summary>Returns the value of the specified field as SqlDecimal.</summary>
      <param name="ordinal">The field from which to retrieve a value.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetSqlDouble(System.Int32)">
      <summary>Returns the value of the specified field as SqlDouble.</summary>
      <param name="ordinal">The field from which to retrieve a value.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetSqlGuid(System.Int32)">
      <summary>Returns the value of the specified field as SqlGuid.</summary>
      <param name="ordinal">The field from which to retrieve a value.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetSqlInt16(System.Int32)">
      <summary>Returns the value of the specified field as SqlInt16.</summary>
      <param name="ordinal">The field from which to retrieve a value.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetSqlInt32(System.Int32)">
      <summary>Returns the value of the specified field as SqlInt32.</summary>
      <param name="ordinal">The field from which to retrieve a value.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetSqlInt64(System.Int32)">
      <summary>Returns the value of the specified field as SqlInt64.</summary>
      <param name="ordinal">The field from which to retrieve a value.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetSqlMetaData(System.Int32)">
      <summary>Returns the value of the specified field as SqlMetaData.</summary>
      <param name="ordinal">The field from which to retrieve a value.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetSqlMoney(System.Int32)">
      <summary>Returns the value of the specified field as SqlMoney.</summary>
      <param name="ordinal">The field from which to retrieve a value.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetSqlSingle(System.Int32)">
      <summary>Returns the value of the specified field as SqlSingle.</summary>
      <param name="ordinal">The field from which to retrieve a value.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetSqlString(System.Int32)">
      <summary>Returns the value of the specified field as SqlString.</summary>
      <param name="ordinal">The field from which to retrieve a value.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetString(System.Int32)">
      <summary>Returns the value of the specified field as string.</summary>
      <param name="ordinal">The field from which to retrieve a value.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetValue(System.Int32)">
      <summary>Returns the value of the specified record.</summary>
      <param name="ordinal">The field from which to retrieve a value.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetValues(System.Object[])">
      <summary>Returns the values for all of the fields in a record.</summary>
      <param name="values">The array in which to store the returned values.</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeUpdatableRecord.HiddenFieldCount">
      <summary>Returns the number of hidden fields in the record. In SQL Server Compact, this property always returns 0.</summary>
      <returns>Always returns a value of 0.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.IsDBNull(System.Int32)">
      <summary>Determines if the specified field is NULL.</summary>
      <returns>True if the field is NULL; otherwise, false.</returns>
      <param name="ordinal">The field to check.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.IsSetAsDefault(System.Int32)">
      <summary>Determines if the specified field is marked to use the underlying default value.</summary>
      <returns>True if the field is marked to use the default value; otherwise, false.</returns>
      <param name="ordinal">The field to check.</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeUpdatableRecord.Item(System.Int32)">
      <summary>Serves as an indexer to a specific field within the record.</summary>
      <param name="ordinal">The ordinal of the field (column) within the record.</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeUpdatableRecord.Item(System.String)">
      <summary>Serves as an indexer to a specific field within the record.</summary>
      <param name="name">The name of the field (column) in the record.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetBoolean(System.Int32,System.Boolean)">
      <summary>Sets the column at the specified index to the passed-in bool value.</summary>
      <param name="ordinal">The field in which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetByte(System.Int32,System.Byte)">
      <summary>Sets the column at the specified index to the passed-in byte value.</summary>
      <param name="ordinal">The field in which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Copies a length of bytes from the specified buffer to the specified column, starting at the specified location within that field.</summary>
      <param name="ordinal">The ordinal position of the column to set.</param>
      <param name="dataIndex">The location within the column to which to begin copying the data.</param>
      <param name="buffer">The buffer that contains the data to copy.</param>
      <param name="bufferIndex">The offset within the buffer from which to copy the data.</param>
      <param name="length">The maximum number of bytes to copy.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetChar(System.Int32,System.Char)">
      <summary>Sets the column at the specified index to the passed-in char value.</summary>
      <param name="ordinal">The field in which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Copies a length of chars from the specified buffer to the specified field, starting at the specified location within that field.</summary>
      <param name="ordinal">The ordinal position of the column to set.</param>
      <param name="dataIndex">The location within the column to which to begin copying the data.</param>
      <param name="buffer">The buffer that contains the data to copy.</param>
      <param name="bufferIndex">The offset within the buffer from which to copy the data.</param>
      <param name="length">The maximum number of bytes to copy.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetDateTime(System.Int32,System.DateTime)">
      <summary>Sets the column at the specified index to the passed-in DateTime value.</summary>
      <param name="ordinal">The field in which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetDecimal(System.Int32,System.Decimal)">
      <summary>Sets the column at the specified index to the passed-in decimal value.</summary>
      <param name="ordinal">The field in which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetDefault(System.Int32)">
      <summary>Sets the default value for the specified field.</summary>
      <param name="ordinal">The field to set.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetDouble(System.Int32,System.Double)">
      <summary>Sets the column at the specified index to the passed-in double value.</summary>
      <param name="ordinal">The field in which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetFloat(System.Int32,System.Single)">
      <summary>Sets the column at the specified index to the passed-in float value.</summary>
      <param name="ordinal">The field in which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetGuid(System.Int32,System.Guid)">
      <summary>Sets the column at the specified index to the passed-in GUID value.</summary>
      <param name="ordinal">The field in which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetInt16(System.Int32,System.Int16)">
      <summary>Sets the column at the specified index to the passed-in int16 value.</summary>
      <param name="ordinal">The field in which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetInt32(System.Int32,System.Int32)">
      <summary>Sets the column at the specified index to the passed-in int32 value.</summary>
      <param name="ordinal">The field in which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetInt64(System.Int32,System.Int64)">
      <summary>Sets the column at the specified index to the passed-in int64 value.</summary>
      <param name="ordinal">The field in which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetObjectRef(System.Int32,System.Object)">
      <summary>Sets the value of the specified field by reference rather than by-value.</summary>
      <param name="ordinal">The field in which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetSqlBinary(System.Int32,System.Data.SqlTypes.SqlBinary)">
      <summary>Sets the column at the specified index to the passed-in SqlBinary value.</summary>
      <param name="ordinal">The field in which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetSqlBoolean(System.Int32,System.Data.SqlTypes.SqlBoolean)">
      <summary>Sets the column at the specified index to the passed-in SqlBool value.</summary>
      <param name="ordinal">The field in which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetSqlByte(System.Int32,System.Data.SqlTypes.SqlByte)">
      <summary>Sets the column at the specified index to the passed-in SqlByte value.</summary>
      <param name="ordinal">The field in which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetSqlDateTime(System.Int32,System.Data.SqlTypes.SqlDateTime)">
      <summary>Sets the column at the specified index to the passed-in SqlDateTime value.</summary>
      <param name="ordinal">The field in which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetSqlDecimal(System.Int32,System.Data.SqlTypes.SqlDecimal)">
      <summary>Sets the column at the specified index to the passed-in SqlDecimal value.</summary>
      <param name="ordinal">The field in which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetSqlDouble(System.Int32,System.Data.SqlTypes.SqlDouble)">
      <summary>Sets the column at the specified index to the passed-in SqlDouble value.</summary>
      <param name="ordinal">The field in which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetSqlGuid(System.Int32,System.Data.SqlTypes.SqlGuid)">
      <summary>Sets the column at the specified index to the passed-in SqlGuid value.</summary>
      <param name="ordinal">The field in which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetSqlInt16(System.Int32,System.Data.SqlTypes.SqlInt16)">
      <summary>Sets the column at the specified index to the passed-in SqlInt16 value.</summary>
      <param name="ordinal">The field in which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetSqlInt32(System.Int32,System.Data.SqlTypes.SqlInt32)">
      <summary>Sets the column at the specified index to the passed-in SqlInt32 value.</summary>
      <param name="ordinal">The field in which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetSqlInt64(System.Int32,System.Data.SqlTypes.SqlInt64)">
      <summary>Sets the column at the specified index to the passed-in SqlInt64 value.</summary>
      <param name="ordinal">The field in which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetSqlMoney(System.Int32,System.Data.SqlTypes.SqlMoney)">
      <summary>Sets the column at the specified index to the passed-in SqlMoney value.</summary>
      <param name="ordinal">The field in which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetSqlSingle(System.Int32,System.Data.SqlTypes.SqlSingle)">
      <summary>Sets the column at the specified index to the passed-in SqlSingle value.</summary>
      <param name="ordinal">The field in which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetSqlString(System.Int32,System.Data.SqlTypes.SqlString)">
      <summary>Sets the column at the specified index to the passed-in SqlString value.</summary>
      <param name="ordinal">The field in which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetString(System.Int32,System.String)">
      <summary>Sets the column at the specified index to the passed-in string value.</summary>
      <param name="ordinal">The field in which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetValue(System.Int32,System.Object)">
      <summary>Sets the column at the specified index to the passed-in value.</summary>
      <param name="ordinal">The field in which to set the value.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetValues(System.Object[])">
      <summary>Sets each of the fields in the record to the corresponding value in the passed-in array.</summary>
      <param name="values">The values to set, in the order in which the fields appear in the record.</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeUpdatableRecord.Updatable">
      <summary>Specifies whether the field is updatable.</summary>
      <returns>True if the field is updatable; otherwise, false.</returns>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlMetaData">
      <summary>Specifies and retrieves metadata information from parameters and columns retrieved from a database. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.#ctor(System.String,System.Data.SqlDbType)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Byte,System.Byte)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Byte,System.Byte,System.Int64,System.Data.SqlTypes.SqlCompareOptions,System.Type)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Int64,System.Data.SqlTypes.SqlCompareOptions)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Boolean)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Byte)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Byte[])"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Char)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Char[])"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Data.SqlTypes.SqlBinary)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Data.SqlTypes.SqlBoolean)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Data.SqlTypes.SqlByte)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Data.SqlTypes.SqlBytes)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Data.SqlTypes.SqlChars)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Data.SqlTypes.SqlDateTime)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Data.SqlTypes.SqlDecimal)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Data.SqlTypes.SqlDouble)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Data.SqlTypes.SqlGuid)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Data.SqlTypes.SqlInt16)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Data.SqlTypes.SqlInt32)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Data.SqlTypes.SqlInt64)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Data.SqlTypes.SqlMoney)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Data.SqlTypes.SqlSingle)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Data.SqlTypes.SqlString)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.DateTime)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Decimal)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Double)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Guid)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Int16)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Int32)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Int64)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Object)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Single)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.String)"></member>
    <member name="P:System.Data.SqlServerCe.SqlMetaData.CompareOptions"></member>
    <member name="P:System.Data.SqlServerCe.SqlMetaData.DbType"></member>
    <member name="P:System.Data.SqlServerCe.SqlMetaData.LocaleId"></member>
    <member name="P:System.Data.SqlServerCe.SqlMetaData.Max"></member>
    <member name="P:System.Data.SqlServerCe.SqlMetaData.MaxLength"></member>
    <member name="P:System.Data.SqlServerCe.SqlMetaData.Name"></member>
    <member name="P:System.Data.SqlServerCe.SqlMetaData.Precision"></member>
    <member name="P:System.Data.SqlServerCe.SqlMetaData.Scale"></member>
    <member name="P:System.Data.SqlServerCe.SqlMetaData.SqlDbType"></member>
    <member name="P:System.Data.SqlServerCe.SqlMetaData.TypeName"></member>
    <member name="T:System.Data.SqlServerCe.TrackingKeyType">
      <summary>Specifies the type of key used to identify tracking data.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.TrackingKeyType.None">
      <summary>This value is reserved for use by the tracking infrastructure. Do not use it in your code.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.TrackingKeyType.PrimaryKey">
      <summary>Uniquely identifies rows by using the primary key defined on the table.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.TrackingKeyType.Guid">
      <summary>Uniquely identifies rows by using the global unique identifier column defined on the table. This is a column of uniqueidentifier data type that is defined with the ROWGUIDCOL attribute.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.TrackingKeyType.Max">
      <summary>This value is reserved for use by the tracking infrastructure. Do not use it in your code.</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.TrackingOptions">
      <summary>Specifies which operations on a table are tracked. </summary>
    </member>
    <member name="F:System.Data.SqlServerCe.TrackingOptions.None">
      <summary>This value is reserved for use by the tracking infrastructure. Do not use it in your code.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.TrackingOptions.Insert">
      <summary>Track only inserts.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.TrackingOptions.Update">
      <summary>Track only updates.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.TrackingOptions.Delete">
      <summary>Track only deletes.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.TrackingOptions.All">
      <summary>Track all operations.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.TrackingOptions.Max">
      <summary>This value is reserved for use by the tracking infrastructure. Do not use it in your code.</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.ValidateType">
      <summary>Specifies the type of data validation to perform.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.ValidateType.NoValidation">
      <summary>Specifies that validation will not be performed. This is the default setting.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.ValidateType.RowCountOnly">
      <summary>Specifies that a row count comparison will be performed on the published data.</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.VerifyOption">
      <summary>These options determine the level of database verification to use. </summary>
    </member>
    <member name="F:System.Data.SqlServerCe.VerifyOption.Default">
      <summary>Recalculates the checksums for each page in the database and compares the new checksums to the expected values.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.VerifyOption.Enhanced">
      <summary>Performs the same checks as the Default option and verifies index integrity. Checks that each index entry exists in the table and that each table entry exists in the index. This option is slower and more thorough than the Default option.</summary>
    </member>
  </members>
</doc>